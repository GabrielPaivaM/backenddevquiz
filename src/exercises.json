{
    "phyton": [
        {
            "id": 1,
            "question": "Qual é a principal função do comando `print` em Python?",
            "options": [
                "Exibir informações na tela",
                "Ler dados do teclado",
                "Executar operações matemáticas"
            ]
        },
        {
            "id": 2,
            "question": "O que é um objeto em Python?",
            "options": [
                "Uma instância de uma classe",
                "Um tipo de dado primitivo",
                "Uma função embutida"
            ]
        },
        {
            "id": 3,
            "question": "Como você realiza a leitura de dados do teclado em Python?",
            "options": [
                "`input()`",
                "`read()`",
                "`get()`"
            ]
        },
        {
            "id": 4,
            "question": "Qual é a diferença entre uma lista e uma tupla em Python?",
            "options": [
                "As listas são mutáveis, as tuplas são imutáveis",
                "As listas são imutáveis, as tuplas são mutáveis",
                "Não há diferença entre elas"
            ]
        },
        {
            "id": 5,
            "question": "O que é uma exceção em Python?",
            "options": [
                "Um erro durante a execução do programa",
                "Um aviso do interpretador",
                "Um comentário no código"
            ]
        },
        {
            "id": 6,
            "question": "Qual é a função do operador `==` em Python?",
            "options": [
                "Verificar igualdade entre dois valores",
                "Atribuir um valor a uma variável",
                "Realizar uma operação matemática"
            ]
        },
        {
            "id": 7,
            "question": "O que é polimorfismo em programação orientada a objetos?",
            "options": [
                "Capacidade de um objeto de ser utilizado de várias formas",
                "Capacidade de um objeto de ser utilizado apenas de uma forma",
                "Capacidade de um objeto de ser herdado por outro"
            ]
        },
        {
            "id": 8,
            "question": "Como você declara uma função em Python?",
            "options": [
                "`def nome_da_funcao():`",
                "`function nome_da_funcao():`",
                "`method nome_da_funcao():`"
            ]
        },
        {
            "id": 9,
            "question": "O que é uma compreensão de lista (list comprehension) em Python?",
            "options": [
                "Uma maneira concisa de criar listas",
                "Uma lista que contém outras listas",
                "Uma lista vazia"
            ]
        },
        {
            "id": 10,
            "question": "Qual é a função do operador `!=` em Python?",
            "options": [
                "Verificar desigualdade entre dois valores",
                "Verificar igualdade entre dois valores",
                "Atribuir um valor a uma variável"
            ]
        },
        {
            "id": 11,
            "question": "O que é um dicionário em Python?",
            "options": [
                "Uma estrutura de dados que mapeia chaves a valores",
                "Uma lista ordenada de elementos",
                "Um tipo de dado primitivo"
            ]
        },
        {
            "id": 12,
            "question": "Qual é a função do comando `break` em um loop?",
            "options": [
                "Encerrar imediatamente o loop",
                "Pular para a próxima iteração do loop",
                "Reiniciar o loop"
            ]
        },
        {
            "id": 13,
            "question": "O que é a instrução `pass` em Python?",
            "options": [
                "Uma instrução nula que não faz nada",
                "Uma instrução para encerrar o programa",
                "Uma instrução para pular para a próxima iteração do loop"
            ]
        },
        {
            "id": 14,
            "question": "Qual é o resultado da expressão `2 ** 3`?",
            "options": [
                "8",
                "6",
                "5"
            ]
        },
        {
            "id": 15,
            "question": "O que é encapsulamento em programação orientada a objetos?",
            "options": [
                "Ocultar os detalhes de implementação e expor apenas a interface",
                "Expor todos os detalhes de implementação",
                "Não há encapsulamento em Python"
            ]
        },
        {
            "id": 16,
            "question": "Como você converte uma string para minúsculas em Python?",
            "options": [
                "`lower()`",
                "`to_lower()`",
                "`case_lower()`"
            ]
        },
        {
            "id": 17,
            "question": "Qual é a diferença entre `append()` e `extend()` em listas?",
            "options": [
                "`append()` adiciona um elemento, `extend()` adiciona múltiplos elementos",
                "`append()` remove um elemento, `extend()` adiciona um elemento",
                "Não há diferença entre eles"
            ]
        },
        {
            "id": 18,
            "question": "O que é um método estático em uma classe Python?",
            "options": [
                "Um método que pertence à classe, não à instância",
                "Um método que pertence à instância, não à classe",
                "Um método que não pertence nem à classe nem à instância"
            ]
        },
        {
            "id": 19,
            "question": "Qual é a função do operador `in` em Python?",
            "options": [
                "Verificar se um valor está em uma sequência",
                "Atribuir um valor a uma variável",
                "Realizar uma comparação matemática"
            ]
        },
        {
            "id": 20,
            "question": "O que é herança em programação orientada a objetos?",
            "options": [
                "Capacidade de uma classe herdar atributos e métodos de outra classe",
                "Capacidade de uma classe ser herdada por várias outras classes",
                "Capacidade de uma classe não herdar nada"
            ]
        },
        {
            "id": 21,
            "question": "Como você abre um arquivo em modo de escrita em Python?",
            "options": [
                "`open('arquivo.txt', 'w')`",
                "`open('arquivo.txt', 'r')`",
                "`open('arquivo.txt', 'a')`"
            ]
        },
        {
            "id": 22,
            "question": "O que é um gerenciador de contexto em Python?",
            "options": [
                "Um objeto que define os métodos `__enter__` e `__exit__`",
                "Um objeto que define o método `context()`",
                "Um objeto que define o método `open()` e `close()`"
            ]
        },
        {
            "id": 23,
            "question": "Qual é a função do operador `//` em Python?",
            "options": [
                "Divisão inteira",
                "Exponenciação",
                "Módulo"
            ]
        },
        {
            "id": 24,
            "question": "O que é um decorador em Python?",
            "options": [
                "Uma função que modifica outra função",
                "Uma função que imprime valores na tela",
                "Uma função que retorna múltiplos valores"
            ]
        },
        {
            "id": 25,
            "question": "Qual é o resultado da expressão `3 + 2 * 4`?",
            "options": [
                "11",
                "20",
                "15"
            ]
        },
        {
            "id": 26,
            "question": "O que é um conjunto (set) em Python?",
            "options": [
                "Uma coleção não ordenada de elementos únicos",
                "Uma lista ordenada de elementos",
                "Uma sequência imutável de elementos"
            ]
        },
        {
            "id": 27,
            "question": "Como você verifica o tipo de uma variável em Python?",
            "options": [
                "`type(variavel)`",
                "`typeof(variavel)`",
                "`var_type(variavel)`"
            ]
        },
        {
            "id": 28,
            "question": "O que é a expressão lambda em Python?",
            "options": [
                "Uma função anônima",
                "Uma função que aceita múltiplos argumentos",
                "Uma função que retorna um valor específico"
            ]
        },
        {
            "id": 29,
            "question": "Qual é a função do comando `continue` em um loop?",
            "options": [
                "Pular para a próxima iteração do loop",
                "Encerrar imediatamente o loop",
                "Reiniciar o loop"
            ]
        },
        {
            "id": 30,
            "question": "O que é a instrução `with` em Python?",
            "options": [
                "Utilizada para criar um contexto de gerenciamento",
                "Utilizada para criar uma estrutura condicional",
                "Utilizada para criar um loop"
            ]
        },
        {
            "id": 31,
            "question": "O que é um módulo em Python?",
            "options": [
                "Um arquivo contendo código Python reutilizável",
                "Um objeto que representa uma classe",
                "Uma função embutida"
            ]
        },
        {
            "id": 32,
            "question": "Qual é a diferença entre `remove()` e `pop()` em listas?",
            "options": [
                "`remove()` remove um elemento pelo valor, `pop()` remove pelo índice",
                "`remove()` remove um elemento pelo índice, `pop()` remove pelo valor",
                "Não há diferença entre eles"
            ]
        },
        {
            "id": 33,
            "question": "O que é um generator em Python?",
            "options": [
                "Uma função que produz uma sequência de valores usando `yield`",
                "Uma função que retorna uma lista",
                "Uma função que realiza operações matemáticas"
            ]
        },
        {
            "id": 34,
            "question": "Qual é a função do comando `len` em Python?",
            "options": [
                "Retorna o comprimento de uma sequência",
                "Retorna o valor máximo de uma sequência",
                "Retorna o valor mínimo de uma sequência"
            ]
        },
        {
            "id": 35,
            "question": "O que é o PEP 8 em Python?",
            "options": [
                "Um guia de estilo para escrever código Python",
                "Uma biblioteca padrão do Python",
                "Um interpretador Python"
            ]
        },
        {
            "id": 36,
            "question": "O que é o método `strip()` em strings?",
            "options": [
                "Remove espaços em branco no início e no final da string",
                "Adiciona espaços em branco no início e no final da string",
                "Retorna uma cópia invertida da string"
            ]
        },
        {
            "id": 37,
            "question": "Qual é o resultado da expressão `2 + 2.0` em Python?",
            "options": [
                "4.0",
                "4",
                "2.0"
            ]
        },
        {
            "id": 38,
            "question": "O que é a instrução `else` em loops em Python?",
            "options": [
                "Executa um bloco de código quando a condição do loop não é mais verdadeira",
                "Executa um bloco de código quando a condição do loop é verdadeira",
                "Encerra imediatamente o loop"
            ]
        },
        {
            "id": 39,
            "question": "Qual é a função do comando `raise` em Python?",
            "options": [
                "Levantar uma exceção manualmente",
                "Encerrar o programa",
                "Pular para a próxima iteração do loop"
            ]
        },
        {
            "id": 40,
            "question": "O que é um índice negativo em Python?",
            "options": [
                "Um índice que conta a partir do final da sequência",
                "Um índice que conta a partir do início da sequência",
                "Um índice que não é permitido em Python"
            ]
        }
    ],
    "javascript": [
        {
            "id": 1,
            "question": "O que é JavaScript?",
            "options": [
                "Uma linguagem de programação de alto nível.",
                "Um sistema operacional.",
                "Um tipo de navegador."
            ]
        },
        {
            "id": 2,
            "question": "Qual a função do comando 'console.log()' em JavaScript?",
            "options": [
                "Exibir mensagens no console.",
                "Iniciar uma função.",
                "Criar uma variável."
            ]
        },
        {
            "id": 3,
            "question": "O que é uma variável em JavaScript?",
            "options": [
                "Um local de armazenamento para dados.",
                "Um tipo de operador.",
                "Uma função de impressão."
            ]
        },
        {
            "id": 4,
            "question": "Qual é a diferença entre 'let', 'const' e 'var' ao declarar variáveis em JavaScript?",
            "options": [
                "Escopo de bloco, constante, escopo de função.",
                "Escopo de função, variável imutável, escopo global.",
                "Escopo de bloco, variável imutável, escopo global."
            ]
        },
        {
            "id": 5,
            "question": "O que é uma função em JavaScript?",
            "options": [
                "Um bloco de código reutilizável.",
                "Uma variável.",
                "Um tipo de loop."
            ]
        },
        {
            "id": 6,
            "question": "Como você comentaria um código em JavaScript?",
            "options": [
                "// Comentário aqui",
                "/* Comentário aqui */",
                "# Comentário aqui"
            ]
        },
        {
            "id": 7,
            "question": "O que é o DOM (Document Object Model) em JavaScript?",
            "options": [
                "Uma representação da estrutura do documento HTML.",
                "Um modelo de objeto para interação com bancos de dados.",
                "Um tipo de variável."
            ]
        },
        {
            "id": 8,
            "question": "Qual é a diferença entre '==' e '===' em JavaScript?",
            "options": [
                "'==' verifica apenas valor, '===' verifica valor e tipo.",
                "'==' verifica apenas tipo, '===' verifica valor e tipo.",
                "Ambos são iguais."
            ]
        },
        {
            "id": 9,
            "question": "O que é um array em JavaScript?",
            "options": [
                "Uma estrutura de dados para armazenar elementos.",
                "Uma função matemática.",
                "Um tipo de loop."
            ]
        },
        {
            "id": 10,
            "question": "O que é o operador ternário em JavaScript?",
            "options": [
                "Um operador condicional de três partes.",
                "Um operador de atribuição.",
                "Um operador de multiplicação."
            ]
        },
        {
            "id": 11,
            "question": "Como você faria um loop 'for' em JavaScript?",
            "options": [
                "for (let i = 0; i < 10; i++)",
                "loopFor (i = 0; i < 10; i++)",
                "for loop (i < 10; i++)"
            ]
        },
        {
            "id": 12,
            "question": "O que é o JSON em JavaScript?",
            "options": [
                "Um formato de dados leve.",
                "Um método de criptografia.",
                "Um tipo de função."
            ]
        },
        {
            "id": 13,
            "question": "Como você adicionaria um elemento a um array em JavaScript?",
            "options": [
                "array.push(elemento)",
                "array.add(elemento)",
                "array.insert(elemento)"
            ]
        },
        {
            "id": 14,
            "question": "O que é o evento 'click' em JavaScript?",
            "options": [
                "Uma ação do usuário de clicar em um elemento.",
                "Um tipo de loop.",
                "Uma função de impressão."
            ]
        },
        {
            "id": 15,
            "question": "O que é AJAX em JavaScript?",
            "options": [
                "Uma técnica para realizar solicitações assíncronas ao servidor.",
                "Um tipo de variável.",
                "Um tipo de loop."
            ]
        },
        {
            "id": 16,
            "question": "O que é o conceito de 'hoisting' em JavaScript?",
            "options": [
                "O comportamento de mover declarações para o topo do escopo.",
                "A criação de loops.",
                "Um tipo de operador."
            ]
        },
        {
            "id": 17,
            "question": "O que é o método 'map()' em JavaScript?",
            "options": [
                "Um método para criar um novo array a partir de outro.",
                "Um método de impressão.",
                "Um método para adicionar elementos a um array."
            ]
        },
        {
            "id": 18,
            "question": "O que é um closure em JavaScript?",
            "options": [
                "Uma função que tem acesso às variáveis de seu escopo externo.",
                "Uma variável imutável.",
                "Uma estrutura de controle de fluxo."
            ]
        },
        {
            "id": 19,
            "question": "Como você evita a propagação de eventos em JavaScript?",
            "options": [
                "event.stopPropagation()",
                "event.preventDefault()",
                "event.stopEvent()"
            ]
        },
        {
            "id": 20,
            "question": "O que é o operador spread (...) em JavaScript?",
            "options": [
                "Um operador para espalhar elementos de um array.",
                "Um operador de adição.",
                "Um operador de subtração."
            ]
        },
        {
            "id": 21,
            "question": "O que é o conceito de 'callback' em JavaScript?",
            "options": [
                "Uma função passada como argumento a outra função.",
                "Uma variável imutável.",
                "Um tipo de operador."
            ]
        },
        {
            "id": 22,
            "question": "Qual é a diferença entre 'null' e 'undefined' em JavaScript?",
            "options": [
                "'null' é atribuído explicitamente, 'undefined' é o valor padrão.",
                "'undefined' é atribuído explicitamente, 'null' é o valor padrão.",
                "Ambos são iguais."
            ]
        },
        {
            "id": 23,
            "question": "O que é o método 'charAt()' em JavaScript?",
            "options": [
                "Um método para obter um caractere em uma posição específica de uma string.",
                "Um método para remover caracteres de uma string.",
                "Um método para inverter uma string."
            ]
        },
        {
            "id": 24,
            "question": "Como você converte uma string para um número em JavaScript?",
            "options": [
                "parseInt(string)",
                "stringToNumber(string)",
                "convertString(string)"
            ]
        },
        {
            "id": 25,
            "question": "O que é o conceito de 'promises' em JavaScript?",
            "options": [
                "Um objeto que representa o eventual resultado de uma operação assíncrona.",
                "Uma forma de declarar variáveis.",
                "Um tipo de loop."
            ]
        },
        {
            "id": 26,
            "question": "Como você faria uma requisição HTTP assíncrona em JavaScript?",
            "options": [
                "Utilizando o método 'fetch()'.",
                "Utilizando o método 'get()'.",
                "Utilizando o método 'request()'."
            ]
        },
        {
            "id": 27,
            "question": "O que é o método 'splice()' em JavaScript?",
            "options": [
                "Um método para modificar o conteúdo de um array.",
                "Um método para criar um novo array.",
                "Um método para ordenar um array."
            ]
        },
        {
            "id": 28,
            "question": "O que é o operador 'in' em JavaScript?",
            "options": [
                "Um operador para verificar a existência de uma propriedade em um objeto.",
                "Um operador de adição.",
                "Um operador de comparação."
            ]
        },
        {
            "id": 29,
            "question": "O que é o conceito de 'strict mode' em JavaScript?",
            "options": [
                "Um modo que impõe um conjunto mais rigoroso de regras.",
                "Um modo para desativar todas as mensagens de erro.",
                "Um tipo de loop."
            ]
        },
        {
            "id": 30,
            "question": "O que é o método 'indexOf()' em JavaScript?",
            "options": [
                "Um método para obter a posição de um elemento em um array.",
                "Um método para adicionar elementos a um array.",
                "Um método para remover elementos de um array."
            ]
        },
        {
            "id": 31,
            "question": "O que é o operador 'typeof' em JavaScript?",
            "options": [
                "Um operador para obter o tipo de uma variável.",
                "Um operador de comparação.",
                "Um operador de adição."
            ]
        },
        {
            "id": 32,
            "question": "O que é o conceito de 'event delegation' em JavaScript?",
            "options": [
                "A prática de usar um único manipulador de eventos para gerenciar vários elementos.",
                "Uma forma de declarar variáveis.",
                "Um tipo de operador."
            ]
        },
        {
            "id": 33,
            "question": "O que é o método 'forEach()' em JavaScript?",
            "options": [
                "Um método para executar uma função uma vez para cada elemento em um array.",
                "Um método para criar um novo array.",
                "Um método para ordenar um array."
            ]
        },
        {
            "id": 34,
            "question": "Como você cria um objeto em JavaScript?",
            "options": [
                "Utilizando a sintaxe '{}'.",
                "Utilizando a sintaxe '[]'.",
                "Utilizando a sintaxe '()'."
            ]
        },
        {
            "id": 35,
            "question": "O que é o método 'toUpperCase()' em JavaScript?",
            "options": [
                "Um método para converter uma string para maiúsculas.",
                "Um método para converter uma string para minúsculas.",
                "Um método para inverter uma string."
            ]
        },
        {
            "id": 36,
            "question": "O que é o método 'filter()' em JavaScript?",
            "options": [
                "Um método para criar um novo array com elementos que passam por um teste.",
                "Um método para modificar o conteúdo de um array.",
                "Um método para adicionar elementos a um array."
            ]
        },
        {
            "id": 37,
            "question": "Qual é a diferença entre 'NaN' e 'undefined' em JavaScript?",
            "options": [
                "'NaN' representa um valor numérico não válido, 'undefined' representa a ausência de valor.",
                "'NaN' representa a ausência de valor, 'undefined' representa um valor numérico não válido.",
                "Ambos são iguais."
            ]
        },
        {
            "id": 38,
            "question": "O que é o método 'toFixed()' em JavaScript?",
            "options": [
                "Um método para arredondar um número para um número específico de casas decimais.",
                "Um método para converter uma string para um número inteiro.",
                "Um método para remover casas decimais de um número."
            ]
        },
        {
            "id": 39,
            "question": "O que é o método 'concat()' em JavaScript?",
            "options": [
                "Um método para combinar dois ou mais arrays.",
                "Um método para criar um novo array com elementos que passam por um teste.",
                "Um método para inverter uma string."
            ]
        },
        {
            "id": 40,
            "question": "O que é o método 'addEventListener()' em JavaScript?",
            "options": [
                "Um método para associar um manipulador de eventos a um elemento HTML.",
                "Um método para criar um novo array com elementos que passam por um teste.",
                "Um método para remover elementos de um array."
            ]
        }
    ],
    "c": [
        {
            "id": 1,
            "question": "Qual é o operador utilizado para comparar dois valores em C?",
            "options": [
                "==",
                "&&",
                "++"
            ]
        },
        {
            "id": 2,
            "question": "O que o seguinte código em C faz?\nint x = 5;\nx = x * 2;",
            "options": [
                "Multiplica x por 2",
                "Adiciona 2 a x",
                "Divide x por 2"
            ]
        },
        {
            "id": 3,
            "question": "Qual é a função da biblioteca stdio.h em C?",
            "options": [
                "Entrada e saída padrão",
                "Manipulação de strings",
                "Alocação de memória dinâmica"
            ]
        },
        {
            "id": 4,
            "question": "Como declarar um ponteiro em C?",
            "options": [
                "int *ptr;",
                "ptr = int;",
                "int ptr;"
            ]
        },
        {
            "id": 5,
            "question": "O que o operador \"&\" faz em C?",
            "options": [
                "Obtém o endereço de uma variável",
                "Realiza uma operação de OU lógico",
                "Incrementa o valor de uma variável"
            ]
        },
        {
            "id": 6,
            "question": "Qual é a diferença entre 'for' e 'while' em C?",
            "options": [
                "'for' é usado quando o número de iterações é conhecido",
                "'while' é usado quando o número de iterações é desconhecido",
                "Ambos são equivalentes em C"
            ]
        },
        {
            "id": 7,
            "question": "O que faz a função 'scanf' em C?",
            "options": [
                "Lê dados de entrada",
                "Imprime dados na tela",
                "Calcula a raiz quadrada"
            ]
        },
        {
            "id": 8,
            "question": "Como inicializar um array em C?",
            "options": [
                "int arr[5] = {1, 2, 3, 4, 5};",
                "array arr[5] = {1, 2, 3, 4, 5};",
                "int arr[] = {1, 2, 3, 4, 5};"
            ]
        },
        {
            "id": 9,
            "question": "O que é um 'header file' em C?",
            "options": [
                "Um arquivo contendo declarações de funções e macros",
                "Um arquivo de configuração para o compilador",
                "Um arquivo que armazena dados de cabeçalho de página"
            ]
        },
        {
            "id": 10,
            "question": "Qual é a função do operador 'sizeof' em C?",
            "options": [
                "Retorna o tamanho em bytes de um tipo de dado",
                "Calcula a média de um conjunto de números",
                "Verifica se dois valores são iguais"
            ]
        },
        {
            "id": 11,
            "question": "O que é um ponteiro nulo em C?",
            "options": [
                "Um ponteiro que não aponta para nenhum lugar na memória",
                "Um ponteiro que aponta para o endereço 0",
                "Um ponteiro que aponta para o endereço da variável nula"
            ]
        },
        {
            "id": 12,
            "question": "Como você incluir um arquivo de cabeçalho personalizado em C?",
            "options": [
                "#include \"meuarquivo.h\"",
                "include <meuarquivo.h>",
                "include arquivo.h"
            ]
        },
        {
            "id": 13,
            "question": "O que é um loop 'do-while' em C?",
            "options": [
                "Um loop que executa o bloco de código pelo menos uma vez",
                "Um loop que não permite iterações",
                "Um loop que só executa se a condição for verdadeira"
            ]
        },
        {
            "id": 14,
            "question": "Qual é a diferença entre 'break' e 'continue' em um loop em C?",
            "options": [
                "'break' interrompe a execução do loop, 'continue' passa para a próxima iteração",
                "'continue' interrompe o loop, 'break' passa para a próxima iteração",
                "Ambos são sinônimos em C"
            ]
        },
        {
            "id": 15,
            "question": "O que é um operador ternário em C?",
            "options": [
                "Um operador que possui três operandos",
                "Um operador que realiza operações ternárias",
                "Um operador que trabalha apenas com números inteiros"
            ]
        },
        {
            "id": 16,
            "question": "Como você declara uma constante em C?",
            "options": [
                "#define PI 3.14159",
                "const PI = 3.14159;",
                "constante PI = 3.14159;"
            ]
        },
        {
            "id": 17,
            "question": "O que é um ponteiro duplo em C?",
            "options": [
                "Um ponteiro que aponta para outro ponteiro",
                "Um ponteiro com tamanho dobrado",
                "Um ponteiro que pode apontar para dois endereços diferentes"
            ]
        },
        {
            "id": 18,
            "question": "O que é a palavra-chave 'static' em uma função em C?",
            "options": [
                "Torna a variável persistente entre chamadas da função",
                "Torna a função visível em outros arquivos",
                "Indica que a função não deve ser otimizada pelo compilador"
            ]
        },
        {
            "id": 19,
            "question": "Como você aloca dinamicamente memória em C?",
            "options": [
                "malloc()",
                "allocate()",
                "new()"
            ]
        },
        {
            "id": 20,
            "question": "O que faz a função 'strcpy' em C?",
            "options": [
                "Copia uma string de origem para uma string de destino",
                "Compara duas strings",
                "Calcula o comprimento de uma string"
            ]
        },
        {
            "id": 21,
            "question": "Como você libera a memória alocada dinamicamente em C?",
            "options": [
                "free()",
                "clear()",
                "delete()"
            ]
        },
        {
            "id": 22,
            "question": "O que é um operador de deslocamento à esquerda em C?",
            "options": [
                "<<",
                ">>",
                "<|"
            ]
        },
        {
            "id": 23,
            "question": "Qual é a principal diferença entre 'scanf' e 'printf' em C?",
            "options": [
                "'scanf' é usado para entrada, 'printf' para saída",
                "'printf' é usado para entrada, 'scanf' para saída",
                "Ambos são usados para entrada e saída"
            ]
        },
        {
            "id": 24,
            "question": "O que é um ponteiro para função em C?",
            "options": [
                "Um ponteiro que armazena endereços de funções",
                "Um ponteiro que aponta para valores constantes",
                "Um ponteiro que só pode ser usado em funções"
            ]
        },
        {
            "id": 25,
            "question": "O que é um 'struct' em C?",
            "options": [
                "Uma estrutura de dados que pode conter diferentes tipos de variáveis",
                "Uma função que não retorna valor",
                "Um tipo de dado usado apenas para caracteres"
            ]
        },
        {
            "id": 26,
            "question": "Qual é o resultado da expressão '5 + 3 * 2' em C?",
            "options": [
                "11",
                "16",
                "26"
            ]
        },
        {
            "id": 27,
            "question": "O que é um operador condicional em C?",
            "options": [
                "? :",
                "||",
                "%"
            ]
        },
        {
            "id": 28,
            "question": "Qual é a função da biblioteca 'math.h' em C?",
            "options": [
                "Fornece funções matemáticas como sqrt() e sin()",
                "Manipulação de strings",
                "Trabalha com operações lógicas"
            ]
        },
        {
            "id": 29,
            "question": "Como você declara uma constante ponteiro em C?",
            "options": [
                "const int *ptr;",
                "int const *ptr;",
                "int * const ptr;"
            ]
        },
        {
            "id": 30,
            "question": "O que é um 'header guard' em C?",
            "options": [
                "Um mecanismo para evitar inclusões múltiplas de um mesmo arquivo de cabeçalho",
                "Uma diretiva que especifica o tamanho máximo de um arquivo",
                "Uma função que protege o cabeçalho de modificações"
            ]
        },
        {
            "id": 31,
            "question": "O que é um operador de incremento em C?",
            "options": [
                "++",
                "--",
                "**"
            ]
        },
        {
            "id": 32,
            "question": "O que faz a função 'getchar' em C?",
            "options": [
                "Lê um caractere da entrada padrão",
                "Imprime um caractere na tela",
                "Converte um caractere para maiúsculo"
            ]
        },
        {
            "id": 33,
            "question": "Qual é a diferença entre 'const' e 'volatile' em C?",
            "options": [
                "'const' indica que a variável não pode ser modificada, 'volatile' indica que pode ser modificada fora do programa",
                "'const' indica que a variável pode ser modificada, 'volatile' indica que não pode ser modificada",
                "Ambos são sinônimos em C"
            ]
        },
        {
            "id": 34,
            "question": "O que é um ponteiro para void em C?",
            "options": [
                "Um ponteiro genérico que pode apontar para qualquer tipo de dado",
                "Um ponteiro que não pode ser usado como argumento de uma função",
                "Um ponteiro que só pode apontar para strings"
            ]
        },
        {
            "id": 35,
            "question": "Como você declara uma matriz em C?",
            "options": [
                "int matriz[3][3];",
                "matriz int[3][3];",
                "declara matriz[3][3];"
            ]
        },
        {
            "id": 36,
            "question": "O que é um operador lógico 'bitwise' em C?",
            "options": [
                "&",
                "||",
                "!"
            ]
        },
        {
            "id": 37,
            "question": "O que faz a função 'strcat' em C?",
            "options": [
                "Concatena duas strings",
                "Compara duas strings",
                "Copia uma string para outra"
            ]
        },
        {
            "id": 38,
            "question": "Como você define uma constante global em C?",
            "options": [
                "#define PI 3.14159",
                "constante global PI = 3.14159;",
                "global const PI = 3.14159;"
            ]
        },
        {
            "id": 39,
            "question": "Qual é a função da diretiva '#ifdef' em C?",
            "options": [
                "Testa se um símbolo está definido",
                "Inclui um arquivo de cabeçalho",
                "Define um novo símbolo"
            ]
        },
        {
            "id": 40,
            "question": "O que é um ponteiro constante em C?",
            "options": [
                "Um ponteiro cujo valor não pode ser alterado, mas o conteúdo pode",
                "Um ponteiro que não pode ser usado como argumento de uma função",
                "Um ponteiro que só pode apontar para strings"
            ]
        }
    ],
    "java": [
        {
            "id": 1,
            "question": "O que é Java?",
            "options": [
                "Uma linguagem de programação orientada a objetos.",
                "Um sistema operacional.",
                "Um navegador de internet."
            ]
        },
        {
            "id": 2,
            "question": "Qual é a principal característica de Java que o torna 'portável'?",
            "options": [
                "Máquina Virtual Java (JVM).",
                "Sistema de arquivos.",
                "Interface gráfica."
            ]
        },
        {
            "id": 3,
            "question": "O que é um compilador Java?",
            "options": [
                "Converte código-fonte Java em bytecode.",
                "Executa diretamente o código-fonte.",
                "Converte bytecode em código-fonte."
            ]
        },
        {
            "id": 4,
            "question": "Qual é o objetivo da Máquina Virtual Java (JVM)?",
            "options": [
                "Executar bytecode Java em qualquer plataforma.",
                "Compilar código-fonte para linguagem de máquina.",
                "Gerar código-fonte a partir de bytecode."
            ]
        },
        {
            "id": 5,
            "question": "O que é um objeto em Java?",
            "options": [
                "Uma instância de uma classe.",
                "Um método estático.",
                "Um operador aritmético."
            ]
        },
        {
            "id": 6,
            "question": "Como você declara uma variável em Java?",
            "options": [
                "int numero;",
                "#numero;",
                "variable numero;"
            ]
        },
        {
            "id": 7,
            "question": "O que é polimorfismo em Java?",
            "options": [
                "A capacidade de um objeto assumir várias formas.",
                "A velocidade de execução de um programa.",
                "A capacidade de uma classe ser selada."
            ]
        },
        {
            "id": 8,
            "question": "Qual é a diferença entre == e equals() em Java?",
            "options": [
                "== compara referências de objetos, equals() compara conteúdo.",
                "== compara conteúdo, equals() compara referências.",
                "Ambos fazem a mesma coisa."
            ]
        },
        {
            "id": 9,
            "question": "O que é um construtor em Java?",
            "options": [
                "Um método especial para inicializar objetos.",
                "Um método para destruir objetos.",
                "Uma variável global."
            ]
        },
        {
            "id": 10,
            "question": "Qual é a finalidade da palavra-chave 'this' em Java?",
            "options": [
                "Referenciar a instância atual da classe.",
                "Indicar um método final.",
                "Definir uma constante."
            ]
        },
        {
            "id": 11,
            "question": "O que é encapsulamento em Java?",
            "options": [
                "Esconder detalhes de implementação e expor uma interface.",
                "Utilizar interfaces gráficas.",
                "Agrupar classes relacionadas."
            ]
        },
        {
            "id": 12,
            "question": "Qual é a diferença entre super e em Java?",
            "options": [
                "Referenciar a classe pai.",
                "Indicar uma classe final.",
                "Iniciar um loop."
            ]
        },
        {
            "id": 13,
            "question": "O que é um pacote em Java?",
            "options": [
                "Um grupo de classes relacionadas.",
                "Um contêiner de métodos estáticos.",
                "Uma instrução de controle de fluxo."
            ]
        },
        {
            "id": 14,
            "question": "Como você declara um array em Java?",
            "options": [
                "int[] numeros;",
                "array numeros;",
                "int numeros();"
            ]
        },
        {
            "id": 15,
            "question": "O que é um bloco try-catch em Java?",
            "options": [
                "Trata exceções lançadas dentro do bloco try.",
                "Define um novo escopo de variáveis.",
                "Indica o início e o fim de um método."
            ]
        },
        {
            "id": 16,
            "question": "Qual é a diferença entre herança e interface em Java?",
            "options": [
                "Herança permite herdar comportamentos, interface define contratos.",
                "Ambos são sinônimos em Java.",
                "Herança é exclusiva para classes abstratas."
            ]
        },
        {
            "id": 17,
            "question": "O que é sobrecarga de método em Java?",
            "options": [
                "Ter vários métodos com o mesmo nome em uma classe.",
                "Substituir um método em uma subclasse.",
                "Definir um método privado."
            ]
        },
        {
            "id": 18,
            "question": "Qual é a diferença entre um método estático e um método de instância?",
            "options": [
                "Um método estático pertence à classe, um de instância pertence ao objeto.",
                "Um método estático pertence ao objeto, um de instância à classe.",
                "Não há diferença."
            ]
        },
        {
            "id": 19,
            "question": "O que é o operador ternário em Java?",
            "options": [
                "Um operador condicional que simplifica a instrução if-else.",
                "Um operador para realizar operações matemáticas ternárias.",
                "Um operador bitwise."
            ]
        },
        {
            "id": 20,
            "question": "O que é o ciclo de vida de um objeto em Java?",
            "options": [
                "Criação, utilização e destruição.",
                "Declaração, inicialização e utilização.",
                "Construção, compilação e execução."
            ]
        },
        {
            "id": 21,
            "question": "Qual é a diferença entre ArrayList e LinkedList em Java?",
            "options": [
                "ArrayList é baseado em array, LinkedList é baseada em lista encadeada.",
                "ArrayList é mais eficiente que LinkedList.",
                "LinkedList não permite adicionar elementos."
            ]
        },
        {
            "id": 22,
            "question": "O que é o Garbage Collection em Java?",
            "options": [
                "Processo automático de recuperação de memória não utilizada.",
                "Coleta de lixo dentro de métodos.",
                "Um tipo de exceção."
            ]
        },
        {
            "id": 23,
            "question": "O que é um método abstrato em Java?",
            "options": [
                "Um método sem implementação, a ser definido nas subclasses.",
                "Um método estático.",
                "Um método privado."
            ]
        },
        {
            "id": 24,
            "question": "Como você cria uma thread em Java?",
            "options": [
                "Estendendo a classe Thread ou implementando a interface Runnable.",
                "Usando a palavra-chave 'thread'.",
                "Invocando o método 'createThread()'."
            ]
        },
        {
            "id": 25,
            "question": "Qual é a função do método hashCode() em Java?",
            "options": [
                "Gerar um código hash para um objeto.",
                "Comparar dois objetos.",
                "Iniciar uma exceção."
            ]
        },
        {
            "id": 26,
            "question": "O que é um bloco finally em Java?",
            "options": [
                "Um bloco de código que é sempre executado, independentemente de exceções.",
                "Um bloco de código que é executado apenas se não houver exceções.",
                "Um bloco de código que é opcional."
            ]
        },
        {
            "id": 27,
            "question": "Como você converte um objeto para uma String em Java?",
            "options": [
                "Usando o método toString().",
                "Utilizando o método getString().",
                "Convertendo diretamente com a palavra-chave 'convert'."
            ]
        },
        {
            "id": 28,
            "question": "O que é o princípio da programação defensiva em Java?",
            "options": [
                "Escrever código de maneira a minimizar possíveis erros.",
                "Ignorar erros durante o desenvolvimento.",
                "Deixar o tratamento de exceções para o usuário."
            ]
        },
        {
            "id": 29,
            "question": "O que é o padrão de design Singleton em Java?",
            "options": [
                "Garante que uma classe tenha apenas uma instância e fornece um ponto global de acesso a ela.",
                "Permite múltiplas instâncias de uma classe.",
                "Torna todas as variáveis de uma classe como estáticas."
            ]
        },
        {
            "id": 30,
            "question": "Como você declara uma constante em Java?",
            "options": [
                "Usando a palavra-chave 'final'.",
                "Declarando como estática.",
                "Utilizando a palavra-chave 'const'."
            ]
        },
        {
            "id": 31,
            "question": "O que é a palavra-chave 'break' utilizada para em Java?",
            "options": [
                "Sair de um loop ou switch.",
                "Iniciar um loop.",
                "Continuar para a próxima iteração de um loop."
            ]
        },
        {
            "id": 32,
            "question": "Qual é a função da classe Scanner em Java?",
            "options": [
                "Facilita a leitura de entrada do teclado e de arquivos.",
                "Controla a execução de threads.",
                "Implementa operações matemáticas avançadas."
            ]
        },
        {
            "id": 33,
            "question": "O que é o operador instanceof em Java?",
            "options": [
                "Verifica se um objeto é uma instância de uma classe ou interface.",
                "Compara dois objetos quanto à igualdade.",
                "Converte um objeto para outra classe."
            ]
        },
        {
            "id": 34,
            "question": "O que é uma expressão lambda em Java?",
            "options": [
                "Uma forma concisa de representar uma interface funcional.",
                "Uma variável que não pode ser alterada.",
                "Uma expressão regular."
            ]
        },
        {
            "id": 35,
            "question": "Qual é a diferença entre um método estático e um método final em uma classe?",
            "options": [
                "Um método estático pertence à classe, um final não pode ser sobrescrito.",
                "Um método estático não pode ser chamado, um final é obrigatório.",
                "Não há diferença."
            ]
        },
        {
            "id": 36,
            "question": "O que é o operador 'this' utilizado como argumento em um construtor?",
            "options": [
                "Chama outro construtor da mesma classe.",
                "Indica uma variável global.",
                "Inicia um novo objeto."
            ]
        },
        {
            "id": 37,
            "question": "O que é o padrão de design Observer em Java?",
            "options": [
                "Define uma dependência um-para-muitos entre objetos, de modo que quando um objeto muda de estado, todos os seus dependentes são notificados e atualizados automaticamente.",
                "Garante que uma classe tenha apenas uma instância.",
                "Controla a execução de threads."
            ]
        },
        {
            "id": 38,
            "question": "Como você cria uma exceção personalizada em Java?",
            "options": [
                "Estendendo a classe Exception.",
                "Utilizando a palavra-chave 'custom'.",
                "Invocando o método 'throwException()'."
            ]
        },
        {
            "id": 39,
            "question": "O que é o operador de atribuição composta '+=' em Java?",
            "options": [
                "Adiciona o valor do lado direito ao valor da variável do lado esquerdo.",
                "Subtrai o valor do lado direito do valor da variável do lado esquerdo.",
                "Concatena o valor do lado direito ao valor da variável do lado esquerdo."
            ]
        },
        {
            "id": 40,
            "question": "O que é o princípio de substituição de Liskov em Java?",
            "options": [
                "Uma instância de uma classe derivada pode ser usada no lugar de uma instância da classe base.",
                "Uma classe deve ser selada para evitar herança.",
                "Todas as classes derivadas devem substituir todos os métodos da classe base."
            ]
        }
    ],
    "c++": [
        {
            "id": 1,
            "question": "Qual é a função principal da diretiva `#include` em C++?",
            "options": [
                "Incluir uma biblioteca no programa.",
                "Definir uma variável.",
                "Comentar uma linha de código."
            ]
        },
        {
            "id": 2,
            "question": "O que é polimorfismo em C++?",
            "options": [
                "Capacidade de uma classe assumir várias formas.",
                "Uma estrutura de controle de fluxo.",
                "Uma variável global."
            ]
        },
        {
            "id": 3,
            "question": "Como você declara um ponteiro em C++?",
            "options": [
                "`int *ponteiro;`",
                "`ponteiro int;`",
                "`&ponteiro = int;`"
            ]
        },
        {
            "id": 4,
            "question": "O que é um construtor em C++?",
            "options": [
                "Uma função especial chamada automaticamente quando um objeto é criado.",
                "Uma variável de tipo especial.",
                "Um operador lógico."
            ]
        },
        {
            "id": 5,
            "question": "O que é uma exceção em C++?",
            "options": [
                "Um evento imprevisto que ocorre durante a execução do programa.",
                "Um tipo de loop.",
                "Uma variável global."
            ]
        },
        {
            "id": 6,
            "question": "Qual é a diferença entre `++i` e `i++` em C++?",
            "options": [
                "Ambos incrementam a variável, mas o valor de retorno é diferente.",
                "São idênticos e podem ser usados de forma intercambiável.",
                "`++i` decrementa a variável."
            ]
        },
        {
            "id": 7,
            "question": "O que é uma classe abstrata em C++?",
            "options": [
                "Uma classe que não pode ser instanciada e serve como base para outras classes.",
                "Uma classe sem membros.",
                "Uma classe que não pode ser herdada."
            ]
        },
        {
            "id": 8,
            "question": "O que faz a palavra-chave `virtual` em C++?",
            "options": [
                "Indica que uma função pode ser sobrescrita em classes derivadas.",
                "Define uma constante.",
                "Inicia um loop."
            ]
        },
        {
            "id": 9,
            "question": "Como você aloca dinamicamente memória em C++?",
            "options": [
                "`new tipo;`",
                "`malloc(tamanho);`",
                "`alloc(tipo);`"
            ]
        },
        {
            "id": 10,
            "question": "O que é um operador ternário em C++?",
            "options": [
                "Um operador condicional que avalia uma expressão e retorna um valor com base em uma condição.",
                "Um operador aritmético.",
                "Um operador lógico."
            ]
        },
        {
            "id": 11,
            "question": "O que é uma referência em C++?",
            "options": [
                "Um alias para uma variável existente.",
                "Uma variável global.",
                "Uma função especial."
            ]
        },
        {
            "id": 12,
            "question": "O que é a sobrecarga de operadores em C++?",
            "options": [
                "Definir o comportamento de operadores para tipos de dados personalizados.",
                "Aumentar o tamanho de uma variável.",
                "Uma operação de bit a bit."
            ]
        },
        {
            "id": 13,
            "question": "O que é o operador `typeid` em C++?",
            "options": [
                "Retorna informações sobre o tipo de um objeto.",
                "Um operador aritmético.",
                "Um operador lógico."
            ]
        },
        {
            "id": 14,
            "question": "Como você define uma constante em C++?",
            "options": [
                "`const tipo nome = valor;`",
                "`constante tipo nome = valor;`",
                "`nome = const valor;`"
            ]
        },
        {
            "id": 15,
            "question": "O que é a palavra-chave `namespace` em C++?",
            "options": [
                "Define um escopo para identificadores.",
                "Indica uma função matemática.",
                "Inicia um loop."
            ]
        },
        {
            "id": 16,
            "question": "O que é um destrutor em C++?",
            "options": [
                "Uma função especial chamada automaticamente quando um objeto é destruído.",
                "Uma variável global.",
                "Um tipo de ponteiro."
            ]
        },
        {
            "id": 17,
            "question": "O que é a herança em C++?",
            "options": [
                "Uma maneira de criar uma nova classe usando uma classe existente como base.",
                "Um tipo de loop.",
                "Uma variável de tipo especial."
            ]
        },
        {
            "id": 18,
            "question": "Como você define uma função em C++?",
            "options": [
                "`tipo nome(parametros) { // corpo da função }`",
                "`funcao tipo nome(parametros);`",
                "`definir tipo nome(parametros);`"
            ]
        },
        {
            "id": 19,
            "question": "O que é um ponteiro nulo em C++?",
            "options": [
                "Um ponteiro que não aponta para nenhum objeto ou função.",
                "Um ponteiro que aponta para o endereço zero.",
                "Uma variável global."
            ]
        },
        {
            "id": 20,
            "question": "O que é uma função membro estática em C++?",
            "options": [
                "Uma função que pertence à classe, não a instâncias específicas.",
                "Uma função que não retorna valor.",
                "Uma função que não pode ser chamada."
            ]
        },
        {
            "id": 21,
            "question": "Qual é o propósito da palavra-chave `const` antes de uma função em C++?",
            "options": [
                "Indica que a função não modificará os membros da classe.",
                "Define uma constante.",
                "Inicia um loop."
            ]
        },
        {
            "id": 22,
            "question": "O que é um ponteiro constante em C++?",
            "options": [
                "Um ponteiro cujo valor não pode ser alterado, mas pode apontar para diferentes objetos.",
                "Uma variável que não pode ser modificada.",
                "Um ponteiro que não pode ser declarado."
            ]
        },
        {
            "id": 23,
            "question": "Como você declara uma matriz em C++?",
            "options": [
                "`tipo nome[tamanho];`",
                "`array tipo nome[tamanho];`",
                "`matriz tipo nome[tamanho];`"
            ]
        },
        {
            "id": 24,
            "question": "O que é a palavra-chave `this` em C++?",
            "options": [
                "Um ponteiro que aponta para o objeto atual.",
                "Uma variável global.",
                "Uma palavra reservada para loops."
            ]
        },
        {
            "id": 25,
            "question": "O que é uma função inline em C++?",
            "options": [
                "Uma função cujo código é inserido diretamente no local de chamada.",
                "Uma função que não retorna valor.",
                "Uma função que não pode ser chamada."
            ]
        },
        {
            "id": 26,
            "question": "O que é o operador de resolução de escopo `::` em C++?",
            "options": [
                "Acessa membros de uma classe fora da definição da classe.",
                "Inicia um loop.",
                "Um operador aritmético."
            ]
        },
        {
            "id": 27,
            "question": "O que é um arquivo de cabeçalho em C++?",
            "options": [
                "Um arquivo contendo declarações de funções e constantes.",
                "Um arquivo que não pode ser incluído em um programa.",
                "Uma função especial."
            ]
        },
        {
            "id": 28,
            "question": "O que é um ponteiro de função em C++?",
            "options": [
                "Um ponteiro que aponta para uma função.",
                "Um operador lógico.",
                "Uma variável global."
            ]
        },
        {
            "id": 29,
            "question": "O que é a palavra-chave `friend` em C++?",
            "options": [
                "Permite que uma função ou classe acesse membros privados de outra classe.",
                "Uma variável global.",
                "Uma função especial."
            ]
        },
        {
            "id": 30,
            "question": "O que é a palavra-chave `delete` em C++?",
            "options": [
                "Desaloca a memória alocada dinamicamente.",
                "Define uma variável.",
                "Uma variável global."
            ]
        },
        {
            "id": 31,
            "question": "O que é um ponteiro inteligente em C++?",
            "options": [
                "Um objeto que age como um ponteiro, mas gerencia automaticamente a memória.",
                "Um tipo de ponteiro que não pode ser modificado.",
                "Uma variável global."
            ]
        },
        {
            "id": 32,
            "question": "Qual é o propósito da palavra-chave `explicit` em C++?",
            "options": [
                "Impede conversões automáticas indesejadas.",
                "Inicia um loop.",
                "Define uma constante."
            ]
        },
        {
            "id": 33,
            "question": "O que é uma variável estática em C++?",
            "options": [
                "Uma variável cujo ciclo de vida persiste durante todo o programa.",
                "Uma variável que não pode ser modificada.",
                "Uma variável global."
            ]
        },
        {
            "id": 34,
            "question": "O que é a palavra-chave `volatile` em C++?",
            "options": [
                "Indica que uma variável pode ser alterada por processos externos.",
                "Uma variável global.",
                "Uma variável que não pode ser modificada."
            ]
        },
        {
            "id": 35,
            "question": "O que é um iterador em C++?",
            "options": [
                "Um objeto que permite percorrer elementos em uma coleção.",
                "Uma variável global.",
                "Uma função especial."
            ]
        },
        {
            "id": 36,
            "question": "Como você declara uma enumeração em C++?",
            "options": [
                "`enum Nome { valor1, valor2, ... };`",
                "`enumeração Nome { valor1, valor2, ... };`",
                "`declara enum Nome { valor1, valor2, ... };`"
            ]
        },
        {
            "id": 37,
            "question": "O que é o operador de acesso de membro `->` em C++?",
            "options": [
                "Acessa membros de um objeto apontado por um ponteiro.",
                "Uma função especial.",
                "Um operador lógico."
            ]
        },
        {
            "id": 38,
            "question": "O que é um arquivo de entrada e saída em C++?",
            "options": [
                "Um arquivo utilizado para leitura e escrita.",
                "Uma variável global.",
                "Uma função especial."
            ]
        },
        {
            "id": 39,
            "question": "O que é a palavra-chave `constexpr` em C++?",
            "options": [
                "Indica que uma expressão pode ser avaliada em tempo de compilação.",
                "Uma variável global.",
                "Inicia um loop."
            ]
        },
        {
            "id": 40,
            "question": "Como você faz uma cópia profunda de um objeto em C++?",
            "options": [
                "Implementando um construtor de cópia que aloca novos recursos.",
                "Uma variável que não pode ser modificada.",
                "Usando a palavra-chave `copy` na declaração da variável."
            ]
        }
    ],
    "c#": [
        {
            "id": 1,
            "question": "Qual é o tipo de dado usado para armazenar números inteiros em C#?",
            "options": [
                "float",
                "int",
                "string"
            ]
        },
        {
            "id": 2,
            "question": "O que é o conceito de herança em C#?",
            "options": [
                "Uma classe pode herdar características de outra classe",
                "Uma classe pode ter várias instâncias",
                "Uma classe pode ser selada"
            ]
        },
        {
            "id": 3,
            "question": "Qual é o objetivo do operador 'using' em C#?",
            "options": [
                "Importar namespaces",
                "Declarar variáveis",
                "Definir constantes"
            ]
        },
        {
            "id": 4,
            "question": "O que é polimorfismo em C#?",
            "options": [
                "A capacidade de uma classe assumir várias formas",
                "A capacidade de uma classe ser selada",
                "A capacidade de uma classe ser abstrata"
            ]
        },
        {
            "id": 5,
            "question": "Como você declara um array em C#?",
            "options": [
                "int[] meuArray;",
                "array meuArray;",
                "list<int> meuArray;"
            ]
        },
        {
            "id": 6,
            "question": "Qual é a diferença entre '== ' e '.Equals()' em C#?",
            "options": [
                "'==' compara referências de objetos, '.Equals()' compara conteúdo",
                "'==' compara conteúdo, '.Equals()' compara referências de objetos",
                "Ambos comparam referências de objetos"
            ]
        },
        {
            "id": 7,
            "question": "O que é um delegate em C#?",
            "options": [
                "Um tipo que representa referências a métodos",
                "Uma variável global",
                "Uma instrução condicional"
            ]
        },
        {
            "id": 8,
            "question": "Qual é o propósito do operador 'as' em C#?",
            "options": [
                "Convertê-lo para um tipo especificado, se possível",
                "Atribuir um valor a uma variável",
                "Realizar uma comparação lógica"
            ]
        },
        {
            "id": 9,
            "question": "O que é LINQ em C#?",
            "options": [
                "Uma linguagem integrada de consulta",
                "Um operador de incremento",
                "Uma estrutura de controle de fluxo"
            ]
        },
        {
            "id": 10,
            "question": "O que significa a palavra-chave 'sealed' em C#?",
            "options": [
                "Impede que uma classe seja herdada",
                "Torna uma classe abstrata",
                "Define uma classe como estática"
            ]
        },
        {
            "id": 11,
            "question": "Qual é a função do 'finally' em um bloco try-catch-finally?",
            "options": [
                "Garantir que o código seja executado, independentemente de haver ou não uma exceção",
                "Capturar exceções",
                "Bloco de código a ser executado apenas se ocorrer uma exceção"
            ]
        },
        {
            "id": 12,
            "question": "Como você instancia uma classe em C#?",
            "options": [
                "MinhaClasse obj = new MinhaClasse();",
                "MinhaClasse obj = create MinhaClasse();",
                "MinhaClasse obj = instantiate MinhaClasse;"
            ]
        },
        {
            "id": 13,
            "question": "Qual é o propósito do 'StringBuilder' em C#?",
            "options": [
                "Manipular strings de forma eficiente",
                "Declarar variáveis do tipo string",
                "Concatenar strings usando '+'"
            ]
        },
        {
            "id": 14,
            "question": "O que é um indexador em C#?",
            "options": [
                "Permite que uma classe seja usada como um array",
                "Define uma variável global",
                "Representa a posição de um elemento em um array"
            ]
        },
        {
            "id": 15,
            "question": "Como você lida com exceções em C#?",
            "options": [
                "Usando blocos try-catch",
                "Ignorando-as e deixando o programa continuar",
                "Usando a palavra-chave 'exception'"
            ]
        },
        {
            "id": 16,
            "question": "Qual é a diferença entre 'ref' e 'out' em parâmetros de método?",
            "options": [
                "'ref' permite a passagem de um valor inicial, 'out' não",
                "'out' permite a passagem de um valor inicial, 'ref' não",
                "Ambos são usados para passagem por referência, sem diferenças"
            ]
        },
        {
            "id": 17,
            "question": "O que é um evento em C#?",
            "options": [
                "Uma notificação de que algo ocorreu",
                "Uma classe abstrata",
                "Um operador lógico"
            ]
        },
        {
            "id": 18,
            "question": "O que é um método estático em C#?",
            "options": [
                "Um método que pertence à classe e não a uma instância específica",
                "Um método que não pode ser chamado",
                "Um método que pertence a uma instância específica"
            ]
        },
        {
            "id": 19,
            "question": "O que é o garbage collector em C#?",
            "options": [
                "Uma funcionalidade que gerencia a liberação de memória não utilizada",
                "Um tipo de dado",
                "Um operador lógico"
            ]
        },
        {
            "id": 20,
            "question": "Como você faz a leitura de entrada do usuário em C#?",
            "options": [
                "Console.ReadLine();",
                "input();",
                "read();"
            ]
        },
        {
            "id": 21,
            "question": "Qual é a função do operador 'is' em C#?",
            "options": [
                "Verificar se um objeto é de um determinado tipo",
                "Realizar uma comparação numérica",
                "Atribuir um valor a uma variável"
            ]
        },
        {
            "id": 22,
            "question": "O que é um atributo em C#?",
            "options": [
                "Informações adicionais sobre elementos do programa",
                "Um tipo de dado",
                "Uma variável global"
            ]
        },
        {
            "id": 23,
            "question": "O que é um construtor em C#?",
            "options": [
                "Um método especial chamado automaticamente quando um objeto é criado",
                "Um método que retorna um valor",
                "Uma variável global"
            ]
        },
        {
            "id": 24,
            "question": "Como você declara uma constante em C#?",
            "options": [
                "const int minhaConstante = 42;",
                "readonly int minhaConstante = 42;",
                "static int minhaConstante = 42;"
            ]
        },
        {
            "id": 25,
            "question": "O que é um namespace em C#?",
            "options": [
                "Um contêiner para um conjunto de classes relacionadas",
                "Uma variável global",
                "Uma classe abstrata"
            ]
        },
        {
            "id": 26,
            "question": "O que é o conceito de encapsulamento em C#?",
            "options": [
                "Esconder detalhes de implementação e expor apenas o necessário",
                "Tornar todos os membros de uma classe públicos",
                "Uma forma de herança"
            ]
        },
        {
            "id": 27,
            "question": "Qual é a diferença entre 'foreach' e 'for' em C#?",
            "options": [
                "'foreach' é usado para iterar sobre coleções, 'for' para loops tradicionais",
                "'for' é usado para iterar sobre coleções, 'foreach' para loops tradicionais",
                "Ambos são usados para iterar sobre coleções"
            ]
        },
        {
            "id": 28,
            "question": "O que é o operador ternário em C#?",
            "options": [
                "Um operador condicional que retorna um valor com base em uma expressão booleana",
                "Um operador aritmético",
                "Um operador lógico"
            ]
        },
        {
            "id": 29,
            "question": "O que é o conceito de sobrecarga de método em C#?",
            "options": [
                "Ter vários métodos com o mesmo nome, mas com parâmetros diferentes",
                "Ter um único método com vários nomes diferentes",
                "Ter métodos com diferentes implementações"
            ]
        },
        {
            "id": 30,
            "question": "Como você converte um tipo de dado para outro em C#?",
            "options": [
                "Usando cast, por exemplo: (int)minhaVariavel;",
                "Usando a palavra-chave 'convert'",
                "Não é possível converter tipos de dados em C#"
            ]
        },
        {
            "id": 31,
            "question": "O que é uma propriedade em C#?",
            "options": [
                "Um método que age como uma variável",
                "Uma variável global",
                "Um tipo de dado"
            ]
        },
        {
            "id": 32,
            "question": "Como você lida com exceções não tratadas em C#?",
            "options": [
                "Utilizando um bloco try-catch global",
                "Ignorando-as e deixando o programa continuar",
                "Utilizando a palavra-chave 'exception'"
            ]
        },
        {
            "id": 33,
            "question": "O que é um operador de coalescência nula (null coalescing) em C#?",
            "options": [
                "Retorna o valor da primeira expressão não nula",
                "Retorna sempre null",
                "Atribui um valor nulo"
            ]
        },
        {
            "id": 34,
            "question": "O que é o operador 'async' em C#?",
            "options": [
                "Indica que um método é assíncrono",
                "Indica que um método é síncrono",
                "Define uma variável assíncrona"
            ]
        },
        {
            "id": 35,
            "question": "O que é o 'using' statement em C#?",
            "options": [
                "Garante que os recursos são liberados quando não são mais necessários",
                "Importa namespaces",
                "Define constantes"
            ]
        },
        {
            "id": 36,
            "question": "Como você realiza a ordenação de uma lista em C#?",
            "options": [
                "Utilizando o método 'Sort()'",
                "Utilizando o método 'Order()'",
                "Utilizando o método 'Arrange()'"
            ]
        },
        {
            "id": 37,
            "question": "O que é um evento de clique (click event) em C#?",
            "options": [
                "Um evento associado a um clique do mouse ou teclado",
                "Um operador lógico",
                "Uma classe abstrata"
            ]
        },
        {
            "id": 38,
            "question": "Qual é o propósito do operador 'typeof' em C#?",
            "options": [
                "Obtém o tipo de uma classe",
                "Realiza uma comparação numérica",
                "Obtém o valor de uma variável"
            ]
        },
        {
            "id": 39,
            "question": "O que é uma expressão lambda em C#?",
            "options": [
                "Uma função anônima que pode ser usada para criar delegates ou expressões LINQ",
                "Uma variável global",
                "Uma instrução condicional"
            ]
        },
        {
            "id": 40,
            "question": "Como você verifica se um objeto é nulo em C#?",
            "options": [
                "Usando a expressão 'objeto == null'",
                "Usando a palavra-chave 'isNull'",
                "Usando a expressão 'objeto =! null'"
            ]
        }
    ],
    "ruby": [
        {
            "id": 1,
            "question": "O que significa a sigla \"IRB\" na linguagem Ruby?",
            "options": [
                "Interactive Ruby",
                "Integrated Ruby",
                "Internal Ruby"
            ]
        },
        {
            "id": 2,
            "question": "Como você define uma classe em Ruby?",
            "options": [
                "class MinhaClasse",
                "def MinhaClasse",
                "module MinhaClasse"
            ]
        },
        {
            "id": 3,
            "question": "Qual é o método utilizado para imprimir algo no console em Ruby?",
            "options": [
                "puts",
                "print",
                "display"
            ]
        },
        {
            "id": 4,
            "question": "O que o método `each` faz em Ruby?",
            "options": [
                "Itera sobre uma coleção",
                "Converte para string",
                "Calcula a média"
            ]
        },
        {
            "id": 5,
            "question": "Como você define um método em Ruby?",
            "options": [
                "def meu_metodo",
                "function meu_metodo",
                "method meu_metodo"
            ]
        },
        {
            "id": 6,
            "question": "O que o operador `&&` representa em Ruby?",
            "options": [
                "E lógico (AND)",
                "OU lógico (OR)",
                "Negação lógica (NOT)"
            ]
        },
        {
            "id": 7,
            "question": "Qual é a diferença entre `nil` e `false` em Ruby?",
            "options": [
                "`nil` representa ausência de valor, enquanto `false` representa falso.",
                "`nil` representa falso, enquanto `false` representa ausência de valor.",
                "`nil` e `false` são equivalentes em Ruby."
            ]
        },
        {
            "id": 8,
            "question": "Como você comenta uma linha de código em Ruby?",
            "options": [
                "# Comentário",
                "// Comentário",
                "/* Comentário */"
            ]
        },
        {
            "id": 9,
            "question": "O que é um símbolo em Ruby?",
            "options": [
                "Um identificador imutável",
                "Uma string longa",
                "Um número inteiro"
            ]
        },
        {
            "id": 10,
            "question": "Qual é o operador utilizado para concatenar strings em Ruby?",
            "options": [
                "+",
                "&",
                "||"
            ]
        },
        {
            "id": 11,
            "question": "O que é um bloco em Ruby?",
            "options": [
                "Um trecho de código delimitado por `do..end` ou `{..}`",
                "Um método definido em uma classe",
                "Um tipo de dado numérico"
            ]
        },
        {
            "id": 12,
            "question": "Como você verifica se um objeto pertence a uma determinada classe em Ruby?",
            "options": [
                "obj.instance_of?(MinhaClasse)",
                "obj.is_a?(MinhaClasse)",
                "obj.type_of?(MinhaClasse)"
            ]
        },
        {
            "id": 13,
            "question": "O que faz o método `attr_accessor` em uma classe Ruby?",
            "options": [
                "Cria getters e setters para as variáveis de instância",
                "Define métodos estáticos",
                "Adiciona um novo atributo à classe"
            ]
        },
        {
            "id": 14,
            "question": "O que é um array em Ruby?",
            "options": [
                "Uma coleção ordenada de elementos",
                "Um bloco de código",
                "Uma variável global"
            ]
        },
        {
            "id": 15,
            "question": "Qual é a diferença entre `==` e `===` em Ruby?",
            "options": [
                "`==` verifica igualdade, enquanto `===` verifica igualdade de tipo e valor.",
                "`==` verifica igualdade de tipo e valor, enquanto `===` verifica apenas valor.",
                "`==` e `===` são equivalentes em Ruby."
            ]
        },
        {
            "id": 16,
            "question": "O que é um símbolo hash em Ruby?",
            "options": [
                "Um par chave-valor",
                "Um tipo especial de string",
                "Uma função de hash"
            ]
        },
        {
            "id": 17,
            "question": "Como você define um bloco em Ruby?",
            "options": [
                "Usando `do..end` ou `{..}`",
                "Com a palavra-chave `block`",
                "Com a sintaxe `function {..}`"
            ]
        },
        {
            "id": 18,
            "question": "O que é um módulo em Ruby?",
            "options": [
                "Uma coleção de métodos e constantes",
                "Um tipo de dado numérico",
                "Uma variável global"
            ]
        },
        {
            "id": 19,
            "question": "Como você lida com exceções em Ruby?",
            "options": [
                "Usando `begin..rescue..end`",
                "Com a palavra-chave `try`",
                "Com a estrutura `if..else`"
            ]
        },
        {
            "id": 20,
            "question": "Qual é a diferença entre `gsub` e `sub` em Ruby?",
            "options": [
                "`gsub` substitui todas as ocorrências, enquanto `sub` substitui apenas a primeira.",
                "`sub` substitui todas as ocorrências, enquanto `gsub` substitui apenas a primeira.",
                "`gsub` e `sub` são sinônimos em Ruby."
            ]
        },
        {
            "id": 21,
            "question": "O que é o conceito de \"duck typing\" em Ruby?",
            "options": [
                "Um objeto é definido por seu comportamento, não por sua classe.",
                "A tipagem estrita é obrigatória em todos os objetos.",
                "Um objeto é definido exclusivamente por sua classe."
            ]
        },
        {
            "id": 22,
            "question": "Como você converte uma string para um número inteiro em Ruby?",
            "options": [
                "`to_i`",
                "`convert_to_integer`",
                "`parse_integer`"
            ]
        },
        {
            "id": 23,
            "question": "O que é o método `each_with_index` em Ruby?",
            "options": [
                "Itera sobre uma coleção fornecendo índices",
                "Converte uma coleção em uma string",
                "Ordena uma coleção numericamente"
            ]
        },
        {
            "id": 24,
            "question": "Qual é a diferença entre `include?` e `member?` em Ruby?",
            "options": [
                "Nenhuma, são sinônimos.",
                "`include?` verifica se um elemento está na coleção, enquanto `member?` verifica se a coleção está presente em outra.",
                "`member?` verifica se um elemento está na coleção, enquanto `include?` verifica se a coleção está presente em outra."
            ]
        },
        {
            "id": 25,
            "question": "Como você declara uma constante em Ruby?",
            "options": [
                "Em maiúsculas, começando com uma letra maiúscula.",
                "Usando a palavra-chave `constant`.",
                "Em minúsculas, começando com uma letra minúscula."
            ]
        },
        {
            "id": 26,
            "question": "O que é o método `map` em Ruby?",
            "options": [
                "Cria uma nova coleção aplicando uma função a cada elemento da coleção original.",
                "Remove elementos duplicados de uma coleção.",
                "Retorna a soma de todos os elementos de uma coleção."
            ]
        },
        {
            "id": 27,
            "question": "Como você acessa o último elemento de um array em Ruby?",
            "options": [
                "`array[-1]`",
                "`array.last`",
                "`array.end`"
            ]
        },
        {
            "id": 28,
            "question": "O que é um símbolo de interrogação no final de um método em Ruby?",
            "options": [
                "Indica que o método retorna um valor booleano.",
                "Indica que o método modifica o objeto.",
                "É apenas uma convenção de nomenclatura."
            ]
        },
        {
            "id": 29,
            "question": "O que é o conceito de \"splat\" em Ruby?",
            "options": [
                "Permite passar um número variável de argumentos para um método.",
                "Converte um array em uma string.",
                "Define um bloco de código anônimo."
            ]
        },
        {
            "id": 30,
            "question": "Qual é a diferença entre `public`, `private` e `protected` em Ruby?",
            "options": [
                "`public` permite acesso de qualquer lugar, `private` só permite acesso dentro da classe e `protected` permite acesso dentro da classe e de suas subclasses.",
                "`public` só permite acesso dentro da classe, `private` permite acesso de qualquer lugar e `protected` permite acesso dentro da classe e de suas subclasses.",
                "`public` permite acesso de qualquer lugar, `private` permite acesso dentro da classe e `protected` só permite acesso dentro da classe."
            ]
        },
        {
            "id": 31,
            "question": "O que é o conceito de \"singleton class\" em Ruby?",
            "options": [
                "Uma classe única associada a um único objeto.",
                "Uma classe que não pode ser instanciada.",
                "Uma classe que herda de todas as outras classes."
            ]
        },
        {
            "id": 32,
            "question": "Como você converte um símbolo para uma string em Ruby?",
            "options": [
                "`to_s`",
                "`convert_to_string`",
                "`parse_string`"
            ]
        },
        {
            "id": 33,
            "question": "O que é o método `flatten` em Ruby?",
            "options": [
                "Converte um array multidimensional em um array unidimensional.",
                "Remove elementos duplicados de uma coleção.",
                "Cria uma cópia exata de uma coleção."
            ]
        },
        {
            "id": 34,
            "question": "Qual é o propósito da instrução `unless` em Ruby?",
            "options": [
                "Executa um bloco de código se a condição for falsa.",
                "Executa um bloco de código se a condição for verdadeira.",
                "Substitui a instrução `if` em determinadas situações."
            ]
        },
        {
            "id": 35,
            "question": "O que é o método `sort` em Ruby?",
            "options": [
                "Ordena uma coleção alfabeticamente ou numericamente.",
                "Retorna a soma de todos os elementos de uma coleção.",
                "Inverte a ordem dos elementos em uma coleção."
            ]
        },
        {
            "id": 36,
            "question": "Como você herda de uma classe em Ruby?",
            "options": [
                "`class MinhaClasse < ClassePai`",
                "`class MinhaClasse inherits ClassePai`",
                "`class MinhaClasse extends ClassePai`"
            ]
        },
        {
            "id": 37,
            "question": "O que é o conceito de \"callback\" em Ruby?",
            "options": [
                "Um bloco de código que é executado em resposta a um evento.",
                "Uma função que chama a si mesma recursivamente.",
                "Um método que retorna um valor booleano."
            ]
        },
        {
            "id": 38,
            "question": "Como você define uma variável de classe em Ruby?",
            "options": [
                "`@@minha_variavel`",
                "`class_var minha_variavel`",
                "`var_class minha_variavel`"
            ]
        },
        {
            "id": 39,
            "question": "O que é o método `select` em Ruby?",
            "options": [
                "Retorna elementos que atendem a uma condição específica.",
                "Remove elementos duplicados de uma coleção.",
                "Transforma uma coleção em uma string."
            ]
        },
        {
            "id": 40,
            "question": "O que é o conceito de \"metaprogramação\" em Ruby?",
            "options": [
                "A capacidade de um programa modificar seu próprio código durante a execução.",
                "A utilização de várias linguagens de programação em um único projeto.",
                "A prática de escrever código de forma manual, sem o uso de ferramentas automatizadas."
            ]
        }
    ],
    "swift": [
        {
            "id": 1,
            "question": "O que é Optionals em Swift?",
            "options": [
                "Um tipo que pode conter um valor ou nenhum.",
                "Uma constante imutável.",
                "Uma estrutura de repetição."
            ]
        },
        {
            "id": 2,
            "question": "Qual é a diferença entre 'let' e 'var' em Swift?",
            "options": [
                "'let' declara constantes, enquanto 'var' declara variáveis.",
                "'let' e 'var' são intercambiáveis.",
                "'let' é usado para tipos de dados numéricos, enquanto 'var' é usado para cadeias de caracteres."
            ]
        },
        {
            "id": 3,
            "question": "O que é um array em Swift?",
            "options": [
                "Uma coleção ordenada de valores do mesmo tipo.",
                "Uma estrutura de controle de fluxo.",
                "Um tipo de dado para armazenar valores opcionais."
            ]
        },
        {
            "id": 4,
            "question": "Qual é a principal diferença entre classes e estruturas em Swift?",
            "options": [
                "Classes são tipos de referência, enquanto estruturas são tipos de valor.",
                "Estruturas são usadas apenas para matrizes.",
                "Classes e estruturas são sinônimos em Swift."
            ]
        },
        {
            "id": 5,
            "question": "O que é o ARC (Automatic Reference Counting) em Swift?",
            "options": [
                "Um mecanismo para rastrear e gerenciar referências a instâncias de classe.",
                "Um operador aritmético.",
                "Um tipo de dado para armazenar contagens de repetição."
            ]
        },
        {
            "id": 6,
            "question": "O que é um protocolo em Swift?",
            "options": [
                "Um conjunto de requisitos que uma classe, estrutura ou enumeração deve atender.",
                "Uma declaração condicional.",
                "Um tipo de dado para armazenar cores."
            ]
        },
        {
            "id": 7,
            "question": "Como você declara uma função em Swift?",
            "options": [
                "Func nomeDaFuncao(parametros: Tipo) -> TipoRetorno { // código }",
                "Funcao nomeDaFuncao(parametros) { // código }",
                "Declarar Funcao nomeDaFuncao { // código }"
            ]
        },
        {
            "id": 8,
            "question": "O que é Option Chaining em Swift?",
            "options": [
                "Uma maneira de chamar propriedades, métodos e subscripts que podem estar atualmente nulos.",
                "Uma técnica de criptografia.",
                "Um tipo de loop em Swift."
            ]
        },
        {
            "id": 9,
            "question": "Como você lida com erros em Swift?",
            "options": [
                "Usando do-try-catch para capturar e tratar erros.",
                "Ignorando os erros para evitar interrupções no código.",
                "Utilizando apenas declarações if para gerenciar erros."
            ]
        },
        {
            "id": 10,
            "question": "O que é uma cláusula defer em Swift?",
            "options": [
                "Uma cláusula usada para adiar a execução de código até que a função seja concluída.",
                "Uma estrutura de controle de loop.",
                "Uma declaração de constante."
            ]
        },
        {
            "id": 11,
            "question": "Como você converte tipos de dados em Swift?",
            "options": [
                "Usando o operador 'as'.",
                "Utilizando apenas declarações 'convert'.",
                "Não é possível converter tipos em Swift."
            ]
        },
        {
            "id": 12,
            "question": "O que é o Core Data em Swift?",
            "options": [
                "Um framework para armazenamento e gerenciamento de dados em aplicativos iOS.",
                "Um tipo de dado para armazenar datas.",
                "Um mecanismo de busca em Swift."
            ]
        },
        {
            "id": 13,
            "question": "O que é um Enum em Swift?",
            "options": [
                "Um tipo de dado que representa um grupo de valores relacionados.",
                "Uma estrutura de repetição.",
                "Um tipo de dado para armazenar coordenadas geográficas."
            ]
        },
        {
            "id": 14,
            "question": "O que é o operador nil coalescing (`??`) em Swift?",
            "options": [
                "Um operador que fornece um valor padrão quando um valor opcional é nulo.",
                "Um operador lógico para comparações.",
                "Um operador de concatenação de strings."
            ]
        },
        {
            "id": 15,
            "question": "Como você instancia uma classe em Swift?",
            "options": [
                "Utilizando a palavra-chave 'init'.",
                "Apenas declarando o nome da classe.",
                "Usando a palavra-chave 'new'."
            ]
        },
        {
            "id": 16,
            "question": "O que é o padrão MVC (Model-View-Controller) em Swift?",
            "options": [
                "Um padrão de design de software que separa a lógica de negócios, a interface do usuário e a lógica de apresentação.",
                "Um operador de atribuição.",
                "Um tipo de estrutura de dados em Swift."
            ]
        },
        {
            "id": 17,
            "question": "O que é um playground em Swift?",
            "options": [
                "Um ambiente interativo para escrever código Swift e visualizar resultados em tempo real.",
                "Uma área de armazenamento de arquivos temporários.",
                "Um tipo de loop infinito."
            ]
        },
        {
            "id": 18,
            "question": "Como você define uma propriedade computada em Swift?",
            "options": [
                "Utilizando as palavras-chave 'get' e 'set'.",
                "Apenas declarando uma variável.",
                "Usando a palavra-chave 'computed'."
            ]
        },
        {
            "id": 19,
            "question": "O que é uma closure em Swift?",
            "options": [
                "Uma função sem nome que pode capturar e armazenar referências a variáveis e constantes circundantes.",
                "Um tipo de dado para armazenar imagens.",
                "Uma estrutura de controle de fluxo."
            ]
        },
        {
            "id": 20,
            "question": "O que é um guard statement em Swift?",
            "options": [
                "Uma declaração usada para transferir o controle fora do escopo atual se uma condição não for atendida.",
                "Uma estrutura de decisão.",
                "Uma forma de declaração de variável."
            ]
        },
        {
            "id": 21,
            "question": "Qual é a diferença entre '==' e '===' em Swift?",
            "options": [
                "'==' compara valores, enquanto '===' compara identidade de objetos.",
                "'===' compara valores, enquanto '==' compara identidade de objetos.",
                "'==' e '===' são intercambiáveis."
            ]
        },
        {
            "id": 22,
            "question": "O que é um Initializer em Swift?",
            "options": [
                "Um método especial que prepara uma instância para uso.",
                "Uma instrução de loop.",
                "Um tipo de dado para armazenar números inteiros."
            ]
        },
        {
            "id": 23,
            "question": "O que é um didSet em Swift?",
            "options": [
                "Um observador que é chamado após o valor de uma propriedade é alterado.",
                "Uma cláusula usada para iniciar loops.",
                "Um tipo de dado para armazenar listas."
            ]
        },
        {
            "id": 24,
            "question": "Como você cria uma extensão em Swift?",
            "options": [
                "Usando a palavra-chave 'extension'.",
                "Apenas declarando uma nova classe.",
                "Utilizando a palavra-chave 'extend'."
            ]
        },
        {
            "id": 25,
            "question": "O que é o operador ternário em Swift?",
            "options": [
                "Um operador condicional que retorna um valor com base em uma condição.",
                "Um operador de concatenação de strings.",
                "Um operador lógico para comparações."
            ]
        },
        {
            "id": 26,
            "question": "O que é um lazy var em Swift?",
            "options": [
                "Uma propriedade que é inicializada apenas quando é acessada pela primeira vez.",
                "Uma declaração condicional.",
                "Um tipo de dado para armazenar valores binários."
            ]
        },
        {
            "id": 27,
            "question": "O que é o Dispatch Queue em Swift?",
            "options": [
                "Uma fila de tarefas a serem executadas em um thread específico.",
                "Uma estrutura de decisão.",
                "Uma declaração de constante."
            ]
        },
        {
            "id": 28,
            "question": "O que é o UserDefaults em Swift?",
            "options": [
                "Uma interface de armazenamento de dados persistente simples.",
                "Um tipo de dado para armazenar cores.",
                "Uma estrutura de repetição."
            ]
        },
        {
            "id": 29,
            "question": "Como você lida com a retenção forte de referências em Swift?",
            "options": [
                "Usando referências fracas (`weak`) ou não capturadas (`unowned`).",
                "Ignorando a retenção de referências.",
                "Utilizando apenas referências fortes."
            ]
        },
        {
            "id": 30,
            "question": "O que é um typealias em Swift?",
            "options": [
                "Um alias para um tipo existente.",
                "Uma estrutura de controle de fluxo.",
                "Uma forma de declaração de variável."
            ]
        },
        {
            "id": 31,
            "question": "O que é o operador range (`...` e `..<`) em Swift?",
            "options": [
                "Um operador para criar intervalos de valores.",
                "Um operador lógico para comparações.",
                "Um operador de atribuição."
            ]
        },
        {
            "id": 32,
            "question": "O que é um playground Quick Look em Swift?",
            "options": [
                "Uma maneira de visualizar rapidamente o conteúdo de uma variável no playground.",
                "Uma estrutura de dados em Swift.",
                "Um tipo de loop infinito."
            ]
        },
        {
            "id": 33,
            "question": "O que é o método de inicialização conveniente em Swift?",
            "options": [
                "Um método secundário que chama o inicializador designado.",
                "Uma estrutura de repetição.",
                "Um tipo de dado para armazenar coordenadas geográficas."
            ]
        },
        {
            "id": 34,
            "question": "O que é a palavra-chave `self` em Swift?",
            "options": [
                "Uma referência ao próprio objeto dentro de uma instância.",
                "Uma palavra-chave reservada para declaração de classes.",
                "Um tipo de dado para armazenar valores nulos."
            ]
        },
        {
            "id": 35,
            "question": "Como você utiliza o Storyboard em Swift?",
            "options": [
                "Uma ferramenta visual para projetar interfaces de usuário.",
                "Uma estrutura de decisão.",
                "Uma declaração de constante."
            ]
        },
        {
            "id": 36,
            "question": "O que é um acesso opcional chaining em Swift?",
            "options": [
                "Uma maneira de chamar propriedades, métodos e subscripts que podem estar atualmente nulos.",
                "Uma estrutura de decisão.",
                "Um tipo de loop em Swift."
            ]
        },
        {
            "id": 37,
            "question": "O que é um método de classe em Swift?",
            "options": [
                "Um método que é chamado na própria classe, em vez de em instâncias da classe.",
                "Uma declaração de constante.",
                "Um tipo de dado para armazenar datas."
            ]
        },
        {
            "id": 38,
            "question": "O que é um didSet em Swift?",
            "options": [
                "Um observador que é chamado após o valor de uma propriedade é alterado.",
                "Uma estrutura de repetição.",
                "Uma forma de declaração de variável."
            ]
        },
        {
            "id": 39,
            "question": "O que é a notação shorthand argument em Swift?",
            "options": [
                "Uma forma de referenciar argumentos por posição em vez de nome.",
                "Uma instrução de loop.",
                "Uma estrutura de controle de fluxo."
            ]
        },
        {
            "id": 40,
            "question": "O que é o operador `where` em Swift?",
            "options": [
                "Um operador usado em cláusulas de extensão para impor restrições a tipos associados.",
                "Um operador lógico para comparações.",
                "Um tipo de dado para armazenar listas."
            ]
        }
    ],
    "php": [
        {
            "id": 1,
            "question": "O que significa PHP?",
            "options": [
                "Personal Home Page",
                "Professional Hypertext Processor",
                "Public Hosting Platform"
            ]
        },
        {
            "id": 2,
            "question": "Qual é a função da instrução \"echo\" no PHP?",
            "options": [
                "Exibir dados na tela",
                "Capturar entrada do usuário",
                "Definir constantes"
            ]
        },
        {
            "id": 3,
            "question": "Qual é o operador de comparação utilizado para verificar se dois valores são idênticos em valor e tipo?",
            "options": [
                "===",
                "==",
                "!="
            ]
        },
        {
            "id": 4,
            "question": "Como você inicia um bloco de código PHP?",
            "options": [
                "<?php",
                "{%php%}",
                "<<php>>"
            ]
        },
        {
            "id": 5,
            "question": "O que o código PHP \"strlen($str)\" faz?",
            "options": [
                "Retorna o comprimento da string $str",
                "Converte $str para minúsculas",
                "Remove espaços em branco de $str"
            ]
        },
        {
            "id": 6,
            "question": "Qual é o nome da função usada para conectar-se a um banco de dados MySQL no PHP?",
            "options": [
                "mysqli_connect()",
                "mysql_query()",
                "pdo_execute()"
            ]
        },
        {
            "id": 7,
            "question": "Como você acessa o terceiro elemento de um array em PHP?",
            "options": [
                "$array[2]",
                "$array{3}",
                "$array->3"
            ]
        },
        {
            "id": 8,
            "question": "O que o código PHP \"if ($x > 0 && $y < 10)\" verifica?",
            "options": [
                "Se $x é maior que 0 e $y é menor que 10",
                "Se $x é igual a 0 ou $y é igual a 10",
                "Se $x é menor que 0 ou $y é maior que 10"
            ]
        },
        {
            "id": 9,
            "question": "Qual é a função do comando \"break\" em um loop em PHP?",
            "options": [
                "Sai do loop imediatamente",
                "Continua para a próxima iteração do loop",
                "Reinicia o loop"
            ]
        },
        {
            "id": 10,
            "question": "O que o código PHP \"include('arquivo.php');\" faz?",
            "options": [
                "Inclui o conteúdo do arquivo.php no ponto de chamada",
                "Executa o arquivo.php como um script independente",
                "Remove o arquivo.php do sistema"
            ]
        },
        {
            "id": 11,
            "question": "Como você declara uma constante em PHP?",
            "options": [
                "define('NOME_CONSTANTE', valor)",
                "const NOME_CONSTANTE = valor;",
                "constant(NOME_CONSTANTE, valor)"
            ]
        },
        {
            "id": 12,
            "question": "Qual é a diferença entre \"GET\" e \"POST\" em termos de envio de dados em formulários HTML usando PHP?",
            "options": [
                "GET envia dados na URL, POST envia dados no corpo da requisição",
                "POST envia dados na URL, GET envia dados no corpo da requisição",
                "Não há diferença entre GET e POST"
            ]
        },
        {
            "id": 13,
            "question": "O que o operador \"%\" faz em PHP?",
            "options": [
                "Retorna o resto da divisão",
                "Multiplica dois números",
                "Calcula a potência"
            ]
        },
        {
            "id": 14,
            "question": "Qual é o significado de \"PDO\" em PHP?",
            "options": [
                "PHP Data Object",
                "Personal Document Organizer",
                "Public Database Operator"
            ]
        },
        {
            "id": 15,
            "question": "Como você converte uma string para letras minúsculas em PHP?",
            "options": [
                "strtolower($str)",
                "tolowercase($str)",
                "stringlower($str)"
            ]
        },
        {
            "id": 16,
            "question": "O que o código PHP \"session_start();\" faz?",
            "options": [
                "Inicia uma sessão de usuário",
                "Encerra a sessão do usuário",
                "Inicia uma nova variável de sessão"
            ]
        },
        {
            "id": 17,
            "question": "Como você faz um comentário de uma única linha em PHP?",
            "options": [
                "// Este é um comentário",
                "/* Este é um comentário */",
                "# Este é um comentário"
            ]
        },
        {
            "id": 18,
            "question": "Qual é a função da instrução \"unset\" em PHP?",
            "options": [
                "Remove uma variável",
                "Define uma variável",
                "Inicia uma sessão"
            ]
        },
        {
            "id": 19,
            "question": "Como você verifica se uma variável está vazia em PHP?",
            "options": [
                "empty($var)",
                "is_null($var)",
                "isset($var)"
            ]
        },
        {
            "id": 20,
            "question": "O que o código PHP \"array_push($arr, 'novo elemento');\" faz?",
            "options": [
                "Adiciona um novo elemento ao final do array $arr",
                "Remove o último elemento do array $arr",
                "Substitui todos os elementos do array $arr"
            ]
        },
        {
            "id": 21,
            "question": "Qual é a função da instrução \"return\" em uma função PHP?",
            "options": [
                "Retorna um valor da função",
                "Encerra a execução da função",
                "Inicia uma nova função"
            ]
        },
        {
            "id": 22,
            "question": "O que o código PHP \"header('Location: pagina.php');\" faz?",
            "options": [
                "Redireciona o navegador para pagina.php",
                "Inclui o conteúdo de pagina.php",
                "Exibe o código fonte de pagina.php"
            ]
        },
        {
            "id": 23,
            "question": "Como você realiza uma consulta SQL básica usando MySQLi em PHP?",
            "options": [
                "mysqli_query($conn, \"SELECT * FROM tabela\")",
                "mysql_select(\"SELECT * FROM tabela\", $conn)",
                "pdo_query(\"SELECT * FROM tabela\", $conn)"
            ]
        },
        {
            "id": 24,
            "question": "O que é uma classe em PHP?",
            "options": [
                "Um modelo para criar objetos",
                "Um array associativo",
                "Uma função especial"
            ]
        },
        {
            "id": 25,
            "question": "Qual é a função da instrução \"continue\" em um loop em PHP?",
            "options": [
                "Pula para a próxima iteração do loop",
                "Sai do loop imediatamente",
                "Reinicia o loop"
            ]
        },
        {
            "id": 26,
            "question": "Como você converte uma string para letras maiúsculas em PHP?",
            "options": [
                "strtoupper($str)",
                "stringuppercase($str)",
                "touppercase($str)"
            ]
        },
        {
            "id": 27,
            "question": "O que o código PHP \"foreach ($array as $valor)\" faz?",
            "options": [
                "Itera sobre cada elemento do array $array, atribuindo a $valor",
                "Cria um novo array com os valores de $array",
                "Remove todos os elementos do array $array"
            ]
        },
        {
            "id": 28,
            "question": "Como você faz um redirecionamento permanente usando PHP?",
            "options": [
                "header('Location: pagina.php', true, 301);",
                "redirect('pagina.php', 301);",
                "move('pagina.php', 301);"
            ]
        },
        {
            "id": 29,
            "question": "Qual é a função da instrução \"die\" em PHP?",
            "options": [
                "Encerra a execução do script",
                "Exibe uma mensagem e continua a execução",
                "Inicia uma nova sessão"
            ]
        },
        {
            "id": 30,
            "question": "O que o código PHP \"array_merge($arr1, $arr2);\" faz?",
            "options": [
                "Combina os arrays $arr1 e $arr2",
                "Remove os elementos comuns entre $arr1 e $arr2",
                "Substitui os elementos de $arr1 pelos de $arr2"
            ]
        },
        {
            "id": 31,
            "question": "Como você declara um array associativo em PHP?",
            "options": [
                "$array = [1, 2, 3];",
                "$array = (1, 2, 3);",
                "$array = ['chave1' => 'valor1', 'chave2' => 'valor2'];"
            ]
        },
        {
            "id": 32,
            "question": "O que o código PHP \"is_numeric($var);\" verifica?",
            "options": [
                "Se $var é um número ou uma string numérica",
                "Se $var é um número inteiro",
                "Se $var é uma string"
            ]
        },
        {
            "id": 33,
            "question": "Qual é a diferença entre \"echo\" e \"print\" em PHP?",
            "options": [
                "Não há diferença significativa entre eles",
                "\"print\" retorna um valor, \"echo\" não",
                "\"echo\" retorna um valor, \"print\" não"
            ]
        },
        {
            "id": 34,
            "question": "O que é o arquivo \"php.ini\" e qual é sua função em PHP?",
            "options": [
                "Arquivo de configuração do PHP",
                "Arquivo de log do PHP",
                "Arquivo de documentação do PHP"
            ]
        },
        {
            "id": 35,
            "question": "Como você converte uma variável para um tipo de dado específico em PHP?",
            "options": [
                "(int)$var",
                "convert($var, 'int')",
                "to_int($var)"
            ]
        },
        {
            "id": 36,
            "question": "O que o código PHP \"file_get_contents('arquivo.txt');\" faz?",
            "options": [
                "Lê o conteúdo do arquivo.txt como uma string",
                "Escreve no arquivo.txt",
                "Cria um novo arquivo.txt"
            ]
        },
        {
            "id": 37,
            "question": "Qual é a função da instrução \"try...catch\" em PHP?",
            "options": [
                "Trata exceções lançadas em um bloco de código",
                "Inicia um novo bloco de código",
                "Encerra a execução do script"
            ]
        },
        {
            "id": 38,
            "question": "Como você realiza uma consulta SQL preparada usando PDO em PHP?",
            "options": [
                "$stmt = $pdo->query(\"SELECT * FROM tabela\");",
                "$stmt = $pdo->prepare(\"SELECT * FROM tabela\");",
                "$stmt = $pdo->exec(\"SELECT * FROM tabela\");"
            ]
        },
        {
            "id": 39,
            "question": "O que é uma constante mágica em PHP?",
            "options": [
                "Variáveis especiais fornecidas pelo PHP",
                "Constantes que nunca mudam",
                "Nomes de constantes com mais de 10 caracteres"
            ]
        },
        {
            "id": 40,
            "question": "Como você calcula a quantidade de elementos em um array em PHP?",
            "options": [
                "count($array)",
                "size($array)",
                "length($array)"
            ]
        }
    ],
    "html&css": [
        {
            "id": 1,
            "question": "Qual é a tag HTML correta para criar um link?",
            "options": [
                "<link>",
                "<a>",
                "<url>"
            ]
        },
        {
            "id": 2,
            "question": "Qual atributo HTML é usado para especificar um texto alternativo para uma imagem?",
            "options": [
                "alt",
                "title",
                "img-alt"
            ]
        },
        {
            "id": 3,
            "question": "Qual é a função da tag <head> em um documento HTML?",
            "options": [
                "Define informações sobre o documento",
                "Exibe o conteúdo principal",
                "Cria uma lista"
            ]
        },
        {
            "id": 4,
            "question": "Como criar uma lista ordenada em HTML?",
            "options": [
                "<ol>",
                "<ul>",
                "<li>"
            ]
        },
        {
            "id": 5,
            "question": "Qual é a tag correta para inserir um quebra de linha em HTML?",
            "options": [
                "<br>",
                "<lb>",
                "<newline>"
            ]
        },
        {
            "id": 6,
            "question": "O que o acrônimo HTML significa?",
            "options": [
                "HyperText Markup Language",
                "High-Level Text Management Language",
                "Hyper Transfer and Multimedia Language"
            ]
        },
        {
            "id": 7,
            "question": "Qual é a tag HTML usada para criar uma tabela?",
            "options": [
                "<table>",
                "<tab>",
                "<tabela>"
            ]
        },
        {
            "id": 8,
            "question": "Como fazer um comentário em HTML?",
            "options": [
                "<!-- comentário -->",
                "// comentário",
                "/* comentário */"
            ]
        },
        {
            "id": 9,
            "question": "Qual é a função da tag <footer> em um documento HTML?",
            "options": [
                "Representa o rodapé do documento",
                "Define o cabeçalho",
                "Cria uma lista de itens"
            ]
        },
        {
            "id": 10,
            "question": "Qual é a tag correta para inserir um hyperlink em HTML?",
            "options": [
                "<a>",
                "<link>",
                "<hlink>"
            ]
        },
        {
            "id": 11,
            "question": "Como criar um campo de entrada de texto em HTML?",
            "options": [
                "<input type=\"text\">",
                "<textinput>",
                "<textfield>"
            ]
        },
        {
            "id": 12,
            "question": "Qual é o elemento HTML para criar um botão?",
            "options": [
                "<button>",
                "<b>",
                "<btn>"
            ]
        },
        {
            "id": 13,
            "question": "O que significa a sigla CSS?",
            "options": [
                "Cascading Style Sheets",
                "Creative Style System",
                "Computer Style Syntax"
            ]
        },
        {
            "id": 14,
            "question": "Como selecionar todos os elementos <p> em CSS?",
            "options": [
                "p {}",
                "#p {}",
                ".p {}"
            ]
        },
        {
            "id": 15,
            "question": "Qual propriedade CSS é usada para definir a cor do texto?",
            "options": [
                "color",
                "text-color",
                "font-color"
            ]
        },
        {
            "id": 16,
            "question": "Qual é a função da propriedade CSS margin?",
            "options": [
                "Define as margens externas de um elemento",
                "Define as margens internas de um elemento",
                "Define as bordas de um elemento"
            ]
        },
        {
            "id": 17,
            "question": "Como definir uma cor de fundo para um elemento em CSS?",
            "options": [
                "background-color",
                "color-background",
                "bg-color"
            ]
        },
        {
            "id": 18,
            "question": "Qual é a propriedade CSS usada para centralizar um elemento horizontalmente?",
            "options": [
                "margin: auto;",
                "text-align: center;",
                "padding: center;"
            ]
        },
        {
            "id": 19,
            "question": "O que a propriedade CSS display: none; faz?",
            "options": [
                "Oculta o elemento",
                "Mostra o elemento em negrito",
                "Define a cor do fundo"
            ]
        },
        {
            "id": 20,
            "question": "Qual é o seletor CSS para selecionar todos os elementos com a classe \"destaque\"?",
            "options": [
                ".destaque",
                "#destaque",
                "destaque {}"
            ]
        },
        {
            "id": 21,
            "question": "Qual é a função da propriedade CSS font-size?",
            "options": [
                "Define o tamanho da fonte",
                "Define a cor da fonte",
                "Define o estilo da fonte"
            ]
        },
        {
            "id": 22,
            "question": "Como criar uma borda em torno de um elemento em CSS?",
            "options": [
                "border: 1px solid black;",
                "outline: 1px solid black;",
                "box: 1px solid black;"
            ]
        },
        {
            "id": 23,
            "question": "O que a propriedade CSS position: relative; faz?",
            "options": [
                "Posiciona o elemento em relação à sua posição original",
                "Remove o elemento do fluxo normal do documento",
                "Posiciona o elemento no centro da tela"
            ]
        },
        {
            "id": 24,
            "question": "Qual é a propriedade CSS para definir a largura de um elemento?",
            "options": [
                "width",
                "size",
                "length"
            ]
        },
        {
            "id": 25,
            "question": "O que a propriedade CSS float faz?",
            "options": [
                "Define o posicionamento de um elemento à esquerda ou à direita",
                "Adiciona uma sombra ao elemento",
                "Transforma o texto em maiúsculas"
            ]
        },
        {
            "id": 26,
            "question": "Como estilizar todos os links não visitados em CSS?",
            "options": [
                "a:link {}",
                "a:not-visited {}",
                "a:unvisited {}"
            ]
        },
        {
            "id": 27,
            "question": "Qual é a função da propriedade CSS z-index?",
            "options": [
                "Define a ordem de empilhamento de elementos posicionados",
                "Define a cor de fundo do elemento",
                "Define o tamanho do elemento"
            ]
        },
        {
            "id": 28,
            "question": "O que significa a sigla HTML em CSS?",
            "options": [
                "HyperText Markup Language",
                "High-Level Text Management Language",
                "Hyper Transfer and Multimedia Language"
            ]
        },
        {
            "id": 29,
            "question": "Como selecionar todos os elementos <h2> em CSS?",
            "options": [
                "h2 {}",
                "#h2 {}",
                ".h2 {}"
            ]
        },
        {
            "id": 30,
            "question": "Qual é a propriedade CSS usada para adicionar sombras a texto?",
            "options": [
                "text-shadow",
                "shadow-text",
                "text-effect"
            ]
        },
        {
            "id": 31,
            "question": "O que a propriedade CSS opacity faz?",
            "options": [
                "Define a opacidade de um elemento",
                "Adiciona uma borda ao elemento",
                "Define a cor de fundo do elemento"
            ]
        },
        {
            "id": 32,
            "question": "Como centralizar verticalmente um elemento em CSS?",
            "options": [
                "line-height: 2;",
                "vertical-align: middle;",
                "margin: auto;"
            ]
        },
        {
            "id": 33,
            "question": "Qual é a propriedade CSS para ajustar o espaçamento entre as letras de um texto?",
            "options": [
                "letter-spacing",
                "word-spacing",
                "text-spacing"
            ]
        },
        {
            "id": 34,
            "question": "O que a propriedade CSS box-sizing: border-box; faz?",
            "options": [
                "Inclui as bordas e o preenchimento no cálculo da largura total",
                "Exclui as bordas e o preenchimento do cálculo da largura total",
                "Define a cor da borda"
            ]
        },
        {
            "id": 35,
            "question": "Como aplicar um estilo a todos os elementos <p> dentro de uma <div> em CSS?",
            "options": [
                ".div p {}",
                "div p {}",
                "div > p {}"
            ]
        },
        {
            "id": 36,
            "question": "Qual é a propriedade CSS usada para definir a cor do texto de um link não visitado?",
            "options": [
                "a:link { color: blue; }",
                "a:not-visited { color: blue; }",
                "a { color: blue; }"
            ]
        },
        {
            "id": 37,
            "question": "O que a propriedade CSS line-height controla?",
            "options": [
                "A altura da linha de texto",
                "A largura da linha de texto",
                "A cor da linha de texto"
            ]
        },
        {
            "id": 38,
            "question": "Como adicionar uma imagem de fundo a um elemento em CSS?",
            "options": [
                "background-image: url('imagem.jpg');",
                "image: url('imagem.jpg');",
                "img: background('imagem.jpg');"
            ]
        },
        {
            "id": 39,
            "question": "Qual é a função da propriedade CSS cursor?",
            "options": [
                "Define o tipo de cursor a ser exibido quando o mouse passa sobre um elemento",
                "Adiciona uma borda ao elemento",
                "Define a posição do cursor na tela"
            ]
        },
        {
            "id": 40,
            "question": "Como selecionar o primeiro elemento filho de um elemento em CSS?",
            "options": [
                ":first-child",
                "first-child{}",
                "first()"
            ]
        }
    ],
    "go": [
        {
            "id": 1,
            "question": "O que o seguinte código em Go imprime?",
            "options": [
                "true",
                "false",
                "5"
            ]
        },
        {
            "id": 2,
            "question": "Qual é a função do operador `:=` em Go?",
            "options": [
                "Declarar e inicializar uma variável",
                "Comparar valores",
                "Atribuir valores a uma variável"
            ]
        },
        {
            "id": 3,
            "question": "O que acontecerá se você tentar compilar e executar o seguinte código Go?",
            "options": [
                "O código imprimirá 0",
                "O código resultará em um erro de compilação",
                "O código imprimirá um valor indefinido"
            ]
        },
        {
            "id": 4,
            "question": "Como você cria um slice vazio em Go?",
            "options": [
                "`make([]int, 0)`",
                "`[]int{}`",
                "`new([]int)`"
            ]
        },
        {
            "id": 5,
            "question": "Qual é a diferença entre `var` e `:=` na declaração de variáveis em Go?",
            "options": [
                "`var` é usada para declaração e `:=` para inicialização",
                "`var` é usada para inicialização e `:=` para declaração",
                "Não há diferença, ambas podem ser usadas de forma intercambiável"
            ]
        },
        {
            "id": 6,
            "question": "O que o seguinte código faz?",
            "options": [
                "Declara e imprime um array de números",
                "Resulta em um erro de compilação",
                "Imprime os números 1, 2 e 3 em linhas separadas"
            ]
        },
        {
            "id": 7,
            "question": "Qual é a principal diferença entre arrays e slices em Go?",
            "options": [
                "Arrays têm tamanho fixo, slices têm tamanho dinâmico",
                "Arrays podem armazenar tipos diferentes, slices não",
                "Arrays são bidimensionais, slices são unidimensionais"
            ]
        },
        {
            "id": 8,
            "question": "O que o seguinte código imprime?",
            "options": [
                "\"Maior que 5\"",
                "\"Menor ou igual a 5\"",
                "10"
            ]
        },
        {
            "id": 9,
            "question": "Como você inicia uma goroutine em Go?",
            "options": [
                "`run minhaFuncao()`",
                "`go minhaFuncao()`",
                "`start minhaFuncao()`"
            ]
        },
        {
            "id": 10,
            "question": "Qual é a função do pacote `fmt` em Go?",
            "options": [
                "Formatação de texto e entrada/saída formatada",
                "Manipulação de arquivos",
                "Operações matemáticas avançadas"
            ]
        },
        {
            "id": 11,
            "question": "O que o seguinte código em Go faz?",
            "options": [
                "Imprime os números 1 a 5 em uma única linha",
                "Resulta em um erro de compilação",
                "Imprime os números 1 a 5 em linhas separadas"
            ]
        },
        {
            "id": 12,
            "question": "Como você declara uma constante em Go?",
            "options": [
                "`const minhaConstante = 42`",
                "`var minhaConstante = 42`",
                "`constante := 42`"
            ]
        },
        {
            "id": 13,
            "question": "Qual é a função da declaração `defer` em Go?",
            "options": [
                "Adiar a execução de uma função até o final de uma função externa",
                "Iniciar a execução de uma função imediatamente",
                "Ignorar a execução de uma função"
            ]
        },
        {
            "id": 14,
            "question": "O que o seguinte código faz?",
            "options": [
                "Imprime o comprimento da string \"hello\"",
                "Resulta em um erro de compilação",
                "Imprime a string \"hello\""
            ]
        },
        {
            "id": 15,
            "question": "Como você lida com erros em Go?",
            "options": [
                "Utilizando a função `panic()`",
                "Ignorando os erros",
                "Utilizando valores de erro retornados por funções"
            ]
        },
        {
            "id": 16,
            "question": "O que é um mapa (map) em Go?",
            "options": [
                "Uma coleção ordenada de elementos",
                "Uma função que mapeia valores para chaves",
                "Uma coleção não ordenada de pares chave-valor"
            ]
        },
        {
            "id": 17,
            "question": "O que é um canal (channel) em Go?",
            "options": [
                "Uma forma de comunicação entre goroutines",
                "Uma estrutura de controle de fluxo",
                "Um tipo de dado numérico"
            ]
        },
        {
            "id": 18,
            "question": "Qual é a saída do seguinte código em Go?",
            "options": [
                "42",
                "Resulta em um erro de compilação",
                "<nil>"
            ]
        },
        {
            "id": 19,
            "question": "O que é uma interface em Go?",
            "options": [
                "Um tipo de dado composto",
                "Um contrato que define um conjunto de métodos",
                "Uma função anônima"
            ]
        },
        {
            "id": 20,
            "question": "Qual é a diferença entre `break` e `continue` em um loop?",
            "options": [
                "`break` encerra o loop, `continue` passa para a próxima iteração",
                "`break` passa para a próxima iteração, `continue` encerra o loop",
                "Ambos encerram o loop, mas em momentos diferentes"
            ]
        },
        {
            "id": 21,
            "question": "O que o seguinte código faz?",
            "options": [
                "Imprime o resultado da divisão inteira de 5 por 2",
                "Resulta em um erro de compilação",
                "Imprime o resultado da divisão real de 5 por 2"
            ]
        },
        {
            "id": 22,
            "question": "Como você converte um valor de tipo `float64` para `int` em Go?",
            "options": [
                "`int(x)`",
                "`float64(x)`",
                "`convert(x, int)`"
            ]
        },
        {
            "id": 23,
            "question": "O que é uma função variádica em Go?",
            "options": [
                "Uma função que aceita um número variável de argumentos",
                "Uma função que retorna um número variável de valores",
                "Uma função que aceita apenas um argumento"
            ]
        },
        {
            "id": 24,
            "question": "Qual é a diferença entre uma função e um método em Go?",
            "options": [
                "Funções são declaradas dentro de structs, métodos não",
                "Métodos são funções que operam em tipos específicos",
                "Não há diferença, os termos são usados de forma intercambiável"
            ]
        },
        {
            "id": 25,
            "question": "O que o seguinte código faz?",
            "options": [
                "Imprime \"Olá, Golang!\"",
                "Resulta em um erro de compilação",
                "Imprime \"Olá, %s!\""
            ]
        },
        {
            "id": 26,
            "question": "Como você remove um elemento de um slice em Go?",
            "options": [
                "Utilizando a função `delete(slice, index)`",
                "Utilizando a função `remove(slice, index)`",
                "Utilizando a técnica `slice = append(slice[:index], slice[index+1:]...)`"
            ]
        },
        {
            "id": 27,
            "question": "O que é um ponteiro em Go?",
            "options": [
                "Uma variável que armazena endereços de memória",
                "Uma variável que armazena valores",
                "Uma variável que armazena funções"
            ]
        },
        {
            "id": 28,
            "question": "Qual é a diferença entre `++i` e `i++` em Go?",
            "options": [
                "Ambos incrementam a variável `i`, mas `++i` retorna o valor incrementado",
                "Ambos incrementam a variável `i`, mas `i++` retorna o valor original",
                "Não há diferença, ambos incrementam a variável da mesma forma"
            ]
        },
        {
            "id": 29,
            "question": "O que o seguinte código faz?",
            "options": [
                "Imprime o valor associado à chave \"dois\" no mapa",
                "Resulta em um erro de compilação",
                "Imprime a chave \"dois\""
            ]
        },
        {
            "id": 30,
            "question": "Como você declara uma struct em Go?",
            "options": [
                "`struct MinhaStruct {}`",
                "`type MinhaStruct {}`",
                "`new MinhaStruct {}`"
            ]
        },
        {
            "id": 31,
            "question": "O que o seguinte código faz?",
            "options": [
                "Imprime os índices e valores dos elementos do slice",
                "Resulta em um erro de compilação",
                "Imprime apenas os valores do slice"
            ]
        },
        {
            "id": 32,
            "question": "Qual é a função do operador `&` em Go?",
            "options": [
                "Criar um novo valor com base em um existente",
                "Obter o endereço de memória de uma variável",
                "Realizar uma operação lógica AND"
            ]
        },
        {
            "id": 33,
            "question": "O que o seguinte código faz?",
            "options": [
                "Declara e chama uma função anônima que retorna a soma de dois inteiros",
                "Resulta em um erro de compilação",
                "Imprime a string \"soma\""
            ]
        },
        {
            "id": 34,
            "question": "Como você verifica se uma chave existe em um mapa em Go?",
            "options": [
                "Utilizando a função `mapHasKey(chave, mapa)`",
                "Verificando diretamente com `if mapa[chave] != nil`",
                "Utilizando a função `_, existe := mapa[chave]`"
            ]
        },
        {
            "id": 35,
            "question": "O que o seguinte código faz?",
            "options": [
                "Imprime o comprimento da string \"Golang\"",
                "Resulta em um erro de compilação",
                "Imprime 6"
            ]
        },
        {
            "id": 36,
            "question": "Qual é a função do pacote `strings` em Go?",
            "options": [
                "Manipulação de strings, como concatenar e dividir",
                "Manipulação de arquivos de texto",
                "Conversão entre diferentes tipos de dados"
            ]
        },
        {
            "id": 37,
            "question": "O que é uma função anônima em Go?",
            "options": [
                "Uma função sem nome que pode ser atribuída a uma variável",
                "Uma função que aceita um número variável de argumentos",
                "Uma função que não retorna nenhum valor"
            ]
        },
        {
            "id": 38,
            "question": "Como você compara duas strings em Go?",
            "options": [
                "Utilizando o operador `==`",
                "Utilizando a função `compare(string1, string2)`",
                "Utilizando o pacote `strings` e a função `Equal`"
            ]
        },
        {
            "id": 39,
            "question": "O que o seguinte código faz?",
            "options": [
                "Cria e imprime um novo slice contendo os elementos de índice 1 a 3 do slice original",
                "Resulta em um erro de compilação",
                "Imprime todos os elementos do slice original"
            ]
        },
        {
            "id": 40,
            "question": "Qual é a função do pacote `sync` em Go?",
            "options": [
                "Sincronizar a execução de goroutines",
                "Manipulação de strings",
                "Controle de fluxo de programas concorrentes"
            ]
        }
    ],
    "kotlin": [
        {
            "id": 1,
            "question": "Qual é a diferença entre uma classe e um objeto em Kotlin?",
            "options": [
                "Uma classe é uma instância de um objeto.",
                "Uma classe é um tipo de dado, enquanto um objeto é uma instância dessa classe.",
                "Classes e objetos são conceitos intercambiáveis em Kotlin."
            ]
        },
        {
            "id": 2,
            "question": "O que é um construtor primário em Kotlin?",
            "options": [
                "Um construtor que é definido na declaração da classe.",
                "Um construtor que é chamado explicitamente durante a criação do objeto.",
                "Um construtor que não é permitido em Kotlin."
            ]
        },
        {
            "id": 3,
            "question": "Em Kotlin, o que é uma variável imutável?",
            "options": [
                "Uma variável cujo valor não pode ser alterado depois de atribuído.",
                "Uma variável que pode ser modificada a qualquer momento.",
                "Uma variável que só pode ser acessada dentro da mesma classe."
            ]
        },
        {
            "id": 4,
            "question": "Qual é a função do operador Elvis `?:` em Kotlin?",
            "options": [
                "Retorna o valor à esquerda se não for nulo, senão retorna o valor à direita.",
                "Realiza uma operação de concatenação de strings.",
                "Representa um operador de comparação lógica."
            ]
        },
        {
            "id": 5,
            "question": "O que é o operador de extensão `in` em Kotlin?",
            "options": [
                "Verifica se um elemento está presente em uma coleção.",
                "Realiza uma operação de adição.",
                "Indica a inclusão de um módulo em um projeto."
            ]
        },
        {
            "id": 6,
            "question": "Como declarar uma função em Kotlin?",
            "options": [
                "Utilizando a palavra-chave `fun`.",
                "Através da palavra-chave `method`.",
                "Definindo a função dentro de uma classe."
            ]
        },
        {
            "id": 7,
            "question": "O que é uma expressão lambda em Kotlin?",
            "options": [
                "Uma função anônima que pode ser passada como argumento.",
                "Uma variável de tipo inteiro.",
                "Um tipo de dado imutável."
            ]
        },
        {
            "id": 8,
            "question": "O que é o conceito de nullable em Kotlin?",
            "options": [
                "Uma variável que pode armazenar um valor nulo.",
                "Uma variável que não pode ser atribuída.",
                "Uma variável cujo valor é sempre zero."
            ]
        },
        {
            "id": 9,
            "question": "Qual é a diferença entre `val` e `var` em Kotlin?",
            "options": [
                "`val` é usado para variáveis imutáveis, enquanto `var` é usado para variáveis mutáveis.",
                "`var` é usado para variáveis imutáveis, enquanto `val` é usado para variáveis mutáveis.",
                "Ambos são usados de forma intercambiável."
            ]
        },
        {
            "id": 10,
            "question": "Como se chama a prática de verificar automaticamente e converter tipos de dados em tempo de execução em Kotlin?",
            "options": [
                "Cast seguro.",
                "Conversão explícita.",
                "Type mismatch."
            ]
        },
        {
            "id": 11,
            "question": "O que é o operador `!!` em Kotlin?",
            "options": [
                "Força a conversão de um tipo nullable para um tipo não nullable.",
                "Indica um comentário de uma linha.",
                "Representa um operador de negação lógica."
            ]
        },
        {
            "id": 12,
            "question": "O que é o modificador de visibilidade `internal` em Kotlin?",
            "options": [
                "A visibilidade é limitada ao mesmo módulo.",
                "A visibilidade é pública em todo o projeto.",
                "A visibilidade é restrita à classe que a contém."
            ]
        },
        {
            "id": 13,
            "question": "Qual é a função da palavra-chave `this` em Kotlin?",
            "options": [
                "Referencia o objeto atual.",
                "Representa uma instância da classe.",
                "Indica uma referência nula."
            ]
        },
        {
            "id": 14,
            "question": "O que é uma função de extensão em Kotlin?",
            "options": [
                "Permite adicionar novos métodos a tipos existentes sem herança.",
                "Uma função que pode ser chamada apenas dentro da classe que a contém.",
                "Uma função que estende a execução do programa."
            ]
        },
        {
            "id": 15,
            "question": "Como você declara uma classe abstrata em Kotlin?",
            "options": [
                "Utilizando a palavra-chave `abstract`.",
                "Adicionando o modificador `abs` à declaração da classe.",
                "Não é possível criar classes abstratas em Kotlin."
            ]
        },
        {
            "id": 16,
            "question": "O que é o Kotlin Coroutines?",
            "options": [
                "Um recurso para lidar com concorrência de forma assíncrona.",
                "Uma estrutura para criação de interfaces gráficas.",
                "Um mecanismo para manipulação de exceções."
            ]
        },
        {
            "id": 17,
            "question": "Qual é o operador usado para criar uma instância de uma classe em Kotlin?",
            "options": [
                "`constructor`.",
                "`new`.",
                "`instanceof`."
            ]
        },
        {
            "id": 18,
            "question": "Em Kotlin, como você declara uma lista imutável?",
            "options": [
                "`val myList: List<String> = listOf(\"item1\", \"item2\")`.",
                "`var myList: List<String> = listOf(\"item1\", \"item2\")`.",
                "`const myList: List<String> = listOf(\"item1\", \"item2\")`."
            ]
        },
        {
            "id": 19,
            "question": "O que é uma classe de dados (data class) em Kotlin?",
            "options": [
                "Uma classe que armazena dados, automaticamente gera métodos como `equals` e `toString`.",
                "Uma classe que não pode armazenar dados.",
                "Uma classe que não pode ser instanciada."
            ]
        },
        {
            "id": 20,
            "question": "O que é o operador `apply` em Kotlin?",
            "options": [
                "Aplica um bloco de código a um objeto e retorna o próprio objeto.",
                "Aplica uma operação de soma.",
                "Representa um operador lógico."
            ]
        },
        {
            "id": 21,
            "question": "Como você declara uma propriedade nullable em Kotlin?",
            "options": [
                "`var name: String = null`.",
                "`var name: String? = null`.",
                "`val name: String? = \"\"`."
            ]
        },
        {
            "id": 22,
            "question": "O que é o conceito de smart cast em Kotlin?",
            "options": [
                "Conversão automática de tipos em certos contextos.",
                "Uma maneira de acessar variáveis locais.",
                "A exclusão automática de classes do projeto."
            ]
        },
        {
            "id": 23,
            "question": "O que é uma sealed class em Kotlin?",
            "options": [
                "Uma classe que permite apenas herança única.",
                "Uma classe que só pode ser acessada por classes específicas.",
                "Uma classe que representa um tipo de dado primitivo."
            ]
        },
        {
            "id": 24,
            "question": "Qual é a diferença entre `break` e `continue` em Kotlin?",
            "options": [
                "`break` interrompe o loop, enquanto `continue` pula para a próxima iteração.",
                "Ambos são usados para interromper loops.",
                "`continue` interrompe o loop, enquanto `break` pula para a próxima iteração."
            ]
        },
        {
            "id": 25,
            "question": "O que é o operador `infix` em Kotlin?",
            "options": [
                "Permite chamar funções com notação de operador.",
                "Indica uma operação de subtração.",
                "Representa uma instrução condicional."
            ]
        },
        {
            "id": 26,
            "question": "Como você declara uma função de extensão em Kotlin?",
            "options": [
                "Utilizando a palavra-chave `extension`.",
                "Adicionando o modificador `ext` à função.",
                "Definindo a função fora de qualquer classe."
            ]
        },
        {
            "id": 27,
            "question": "O que é o operador `when` em Kotlin?",
            "options": [
                "Substitui a instrução `if` em certos contextos.",
                "Indica uma operação de multiplicação.",
                "Representa um operador de comparação."
            ]
        },
        {
            "id": 28,
            "question": "Em Kotlin, o que é a palavra-chave `by` usada para?",
            "options": [
                "Delega a implementação de uma interface a outro objeto.",
                "Indica uma operação de adição.",
                "Representa uma palavra-chave reservada sem função específica."
            ]
        },
        {
            "id": 29,
            "question": "Qual é a principal diferença entre `apply` e `with` em Kotlin?",
            "options": [
                "`apply` retorna o próprio objeto, enquanto `with` não.",
                "`with` retorna o próprio objeto, enquanto `apply` não.",
                "Ambos são usados para a mesma finalidade."
            ]
        },
        {
            "id": 30,
            "question": "O que é o operador `++` em Kotlin?",
            "options": [
                "Aumenta o valor de uma variável em 1.",
                "Reduz o valor de uma variável em 1.",
                "Indica uma operação de multiplicação."
            ]
        },
        {
            "id": 31,
            "question": "O que é o conceito de lazy initialization em Kotlin?",
            "options": [
                "Inicializa uma variável apenas quando ela é acessada pela primeira vez.",
                "Não permite a inicialização de variáveis.",
                "Inicializa todas as variáveis no momento da criação."
            ]
        },
        {
            "id": 32,
            "question": "Como você faz uma cópia modificada de uma lista em Kotlin?",
            "options": [
                "Utilizando a função `copy`.",
                "Utilizando a função `clone`.",
                "Utilizando a função `toList`."
            ]
        },
        {
            "id": 33,
            "question": "O que é uma expressão de função única (single-expression function) em Kotlin?",
            "options": [
                "Uma função que consiste em apenas uma expressão e pode ser declarada em uma única linha.",
                "Uma função que não pode conter expressões.",
                "Uma função que deve ser chamada apenas uma vez."
            ]
        },
        {
            "id": 34,
            "question": "Qual é a diferença entre `==` e `===` em Kotlin?",
            "options": [
                "`==` verifica a igualdade de valores, enquanto `===` verifica a igualdade de referências.",
                "Ambos são usados para verificar a igualdade de valores.",
                "`===` verifica a igualdade de valores, enquanto `==` verifica a igualdade de referências."
            ]
        },
        {
            "id": 35,
            "question": "O que é o operador de negação `!` em Kotlin?",
            "options": [
                "Inverte o valor booleano de uma expressão.",
                "Indica uma operação de concatenação de strings.",
                "Representa um operador aritmético."
            ]
        },
        {
            "id": 36,
            "question": "Em Kotlin, como você cria uma classe anônima?",
            "options": [
                "Utilizando a palavra-chave `anonymous class`.",
                "Utilizando a palavra-chave `object`.",
                "Utilizando a palavra-chave `class` sem nome."
            ]
        },
        {
            "id": 37,
            "question": "O que é a palavra-chave `sealed` usada para em uma classe em Kotlin?",
            "options": [
                "Restringe a herança apenas a classes dentro do mesmo arquivo.",
                "Indica uma classe que não pode ser modificada.",
                "Permite herança apenas a partir de classes específicas."
            ]
        },
        {
            "id": 38,
            "question": "O que é o operador de range `..` em Kotlin?",
            "options": [
                "Cria um intervalo de valores.",
                "Indica um operador de concatenação de strings.",
                "Representa um operador aritmético."
            ]
        },
        {
            "id": 39,
            "question": "O que é a palavra-chave `super` em Kotlin?",
            "options": [
                "Referencia a classe pai.",
                "Indica uma superclasse abstrata.",
                "Representa uma variável constante."
            ]
        },
        {
            "id": 40,
            "question": "Como você lida com exceções em Kotlin?",
            "options": [
                "Utilizando as palavras-chave `try`, `catch` e `finally`.",
                "Ignorando-as, já que Kotlin não suporta tratamento de exceções.",
                "Utilizando apenas `try` e `catch`. "
            ]
        }
    ],
    "rust": [
        {
            "id": 1,
            "question": "Qual é a principal característica do Rust em relação ao gerenciamento de memória?",
            "options": [
                "Coleta de lixo (garbage collection)",
                "Alocação estática",
                "Referências seguras"
            ]
        },
        {
            "id": 2,
            "question": "O que significa a expressão 'ownership' em Rust?",
            "options": [
                "Propriedade",
                "Otimização",
                "Organização"
            ]
        },
        {
            "id": 3,
            "question": "Qual é a função da palavra-chave 'mut' em Rust?",
            "options": [
                "Indica que a variável é mutável",
                "Define uma função",
                "Sinaliza uma variável constante"
            ]
        },
        {
            "id": 4,
            "question": "O que é 'borrowing' em Rust?",
            "options": [
                "Referência temporária a uma variável",
                "Alocar memória",
                "Excluir uma variável"
            ]
        },
        {
            "id": 5,
            "question": "Em Rust, qual é a diferença entre 'String' e 'str'?",
            "options": [
                "'String' é mutável, 'str' é imutável",
                "'String' é uma biblioteca, 'str' é uma palavra-chave",
                "Não há diferença"
            ]
        },
        {
            "id": 6,
            "question": "Como Rust lida com condições de concorrência?",
            "options": [
                "Através de propriedades de propriedade",
                "Utilizando exclusão mútua",
                "Não suporta concorrência"
            ]
        },
        {
            "id": 7,
            "question": "O que é um 'lifetime' em Rust?",
            "options": [
                "Escopo de validade de uma referência",
                "Duração de execução de um programa",
                "Nome de uma função"
            ]
        },
        {
            "id": 8,
            "question": "Qual é a finalidade do conceito 'match' em Rust?",
            "options": [
                "Realizar correspondência de padrões",
                "Gerar números aleatórios",
                "Manipular strings"
            ]
        },
        {
            "id": 9,
            "question": "O que são 'enums' em Rust?",
            "options": [
                "Tipos enumerados",
                "Variáveis globais",
                "Funções anônimas"
            ]
        },
        {
            "id": 10,
            "question": "O que é a macro 'println!' faz em Rust?",
            "options": [
                "Imprime na saída padrão com quebra de linha",
                "Define uma nova variável",
                "Realiza uma operação matemática"
            ]
        },
        {
            "id": 11,
            "question": "Como Rust evita o problema de null pointer?",
            "options": [
                "Utilizando o tipo 'Option'",
                "Permitindo ponteiros nulos",
                "Ignorando ponteiros"
            ]
        },
        {
            "id": 12,
            "question": "O que é 'ownership transfer' em Rust?",
            "options": [
                "Transferência de propriedade de uma variável para outra",
                "Modificação de uma variável",
                "Ignorar a propriedade de uma variável"
            ]
        },
        {
            "id": 13,
            "question": "Qual é a diferença entre 'struct' e 'enum' em Rust?",
            "options": [
                "'Struct' define estruturas de dados, 'enum' define tipos enumerados",
                "Não há diferença",
                "'Struct' é mais eficiente que 'enum'"
            ]
        },
        {
            "id": 14,
            "question": "Como você define um método em Rust?",
            "options": [
                "Usando a palavra-chave 'impl'",
                "Utilizando 'method'",
                "Não é possível definir métodos em Rust"
            ]
        },
        {
            "id": 15,
            "question": "O que é 'lifetime elision' em Rust?",
            "options": [
                "Inferência automática do tempo de vida de referências",
                "Exclusão de um tempo de vida",
                "Declaração explícita de tempo de vida"
            ]
        },
        {
            "id": 16,
            "question": "Qual é o operador utilizado para acessar membros de uma struct em Rust?",
            "options": [
                "'",
                "->'",
                "',",
                "Não há diferença'"
            ]
        },
        {
            "id": 17,
            "question": "O que é 'Rustc'?",
            "options": [
                "O compilador Rust",
                "Uma biblioteca padrão",
                "Um sistema de controle de versão"
            ]
        },
        {
            "id": 18,
            "question": "Qual é o objetivo do 'Cargo' em Rust?",
            "options": [
                "Gerenciador de pacotes e construtor de projetos",
                "Um tipo de dado",
                "Sistema de tipagem"
            ]
        },
        {
            "id": 19,
            "question": "O que é 'ownership borrowing' em Rust?",
            "options": [
                "Referenciar uma variável sem transferir a propriedade",
                "Emprestar propriedades de uma variável",
                "Não é permitido em Rust"
            ]
        },
        {
            "id": 20,
            "question": "Como Rust lida com o conceito de nulidade?",
            "options": [
                "Através do tipo 'Option' para valores nulos",
                "Permitindo valores nulos diretamente",
                "Ignorando a nulidade"
            ]
        },
        {
            "id": 21,
            "question": "O que são 'lifetimes anônimos' em Rust?",
            "options": [
                "Lifetimes não nomeados em referências",
                "Tempo de vida indefinido",
                "Não existe tal conceito"
            ]
        },
        {
            "id": 22,
            "question": "Qual é a função do operador 'match' em Rust?",
            "options": [
                "Realizar correspondência de padrões",
                "Efetuar operações matemáticas",
                "Atribuir valores a variáveis"
            ]
        },
        {
            "id": 23,
            "question": "O que significa o termo 'unsafe' em Rust?",
            "options": [
                "Código que pode violar garantias de segurança",
                "Código inseguro de execução rápida",
                "Funções não seguras"
            ]
        },
        {
            "id": 24,
            "question": "Em Rust, o que são 'trait bounds'?",
            "options": [
                "Restrições em tipos genéricos",
                "Limites de memória",
                "Regras para nomes de variáveis"
            ]
        },
        {
            "id": 25,
            "question": "Qual é a principal diferença entre 'match' e 'if let' em Rust?",
            "options": [
                "'Match' permite correspondência de padrões mais complexa",
                "'If let' é mais eficiente que 'match'",
                "Não há diferença"
            ]
        },
        {
            "id": 26,
            "question": "O que é 'ownership annotation' em Rust?",
            "options": [
                "Indicação explícita de quem é o dono de uma variável",
                "Anotação de tipo",
                "Ignorar propriedades de uma variável"
            ]
        },
        {
            "id": 27,
            "question": "Como Rust trata erros de maneira eficiente?",
            "options": [
                "Utilizando o tipo 'Result'",
                "Ignorando erros",
                "Gerando exceções"
            ]
        },
        {
            "id": 28,
            "question": "O que é 'slicing' em Rust?",
            "options": [
                "Referenciar parte de uma coleção",
                "Dividir uma string",
                "Não é suportado em Rust"
            ]
        },
        {
            "id": 29,
            "question": "Qual é a função do operador 'as' em Rust?",
            "options": [
                "Conversão de tipos",
                "Acesso a membros de uma struct",
                "Declaração de variável"
            ]
        },
        {
            "id": 30,
            "question": "Em Rust, como você define um enum com valores associados?",
            "options": [
                "Enumeração com tuplas ou estruturas",
                "Não é possível associar valores a enums",
                "Utilizando a palavra-chave 'value'"
            ]
        },
        {
            "id": 31,
            "question": "O que é 'lifetime subtyping' em Rust?",
            "options": [
                "Um tempo de vida sendo um subconjunto de outro",
                "Ignorar a subdigitação",
                "Não é permitido em Rust"
            ]
        },
        {
            "id": 32,
            "question": "Qual é a diferença entre 'clone' e 'copy' em Rust?",
            "options": [
                "'Clone' realiza cópias profundas, 'copy' realiza cópias rasas",
                "Não há diferença",
                "'Copy' é mais eficiente que 'clone'"
            ]
        },
        {
            "id": 33,
            "question": "Em Rust, o que é 'Deref' e 'DerefMut'?",
            "options": [
                "Traits para sobrecarga de operadores de desreferenciamento",
                "Métodos para alocação de memória",
                "Palavras-chave reservadas"
            ]
        },
        {
            "id": 34,
            "question": "O que é 'Rustdoc'?",
            "options": [
                "Ferramenta de documentação para Rust",
                "Compilador Rust",
                "Biblioteca padrão de Rust"
            ]
        },
        {
            "id": 35,
            "question": "Qual é a principal diferença entre 'const' e 'static' em Rust?",
            "options": [
                "'Const' é avaliado em tempo de compilação, 'static' em tempo de execução",
                "Não há diferença",
                "'Static' é mais eficiente que 'const'"
            ]
        },
        {
            "id": 36,
            "question": "O que é 'smart pointer' em Rust?",
            "options": [
                "Um tipo de ponteiro com funcionalidades adicionais",
                "Ponteiro automático",
                "Não é permitido em Rust"
            ]
        },
        {
            "id": 37,
            "question": "Qual é a finalidade do módulo 'std' em Rust?",
            "options": [
                "Biblioteca padrão de Rust",
                "Gerenciador de pacotes",
                "Sistema de tipos"
            ]
        },
        {
            "id": 38,
            "question": "O que é 'move semantics' em Rust?",
            "options": [
                "Transferência de propriedade de uma variável para outra",
                "Operações matemáticas com movimento",
                "Ignorar movimento de variáveis"
            ]
        },
        {
            "id": 39,
            "question": "Como você define uma função genérica em Rust?",
            "options": [
                "Utilizando o operador '<>'",
                "Não é possível criar funções genéricas",
                "Usando o operador '<T>'"
            ]
        },
        {
            "id": 40,
            "question": "Qual é a principal diferença entre 'panic!' e 'unwrap()' em Rust?",
            "options": [
                "'panic!' termina a execução, 'unwrap()' trata o erro",
                "Não há diferença",
                "'Unwrap()' termina a execução, 'panic!' trata o erro"
            ]
        }
    ],
    "typescript": [
        {
            "id": 1,
            "question": "Qual é a principal finalidade do TypeScript?",
            "options": [
                "Aprimorar a legibilidade e formatação do código",
                "Adicionar tipagem estática ao JavaScript",
                "Reduzir o desempenho do código"
            ]
        },
        {
            "id": 2,
            "question": "O que é um tipo 'any' em TypeScript?",
            "options": [
                "Um tipo que aceita qualquer valor",
                "Um tipo exclusivo para números",
                "Um tipo reservado para strings"
            ]
        },
        {
            "id": 3,
            "question": "Como você define uma variável constante em TypeScript?",
            "options": [
                "const nome: string = 'exemplo';",
                "let constante = 'valor';",
                "constant valor: string = 'exemplo';"
            ]
        },
        {
            "id": 4,
            "question": "O que é TypeScript ambient declaration?",
            "options": [
                "Uma maneira de fornecer informações sobre tipos para bibliotecas JavaScript existentes",
                "Um recurso que declara constantes no ambiente de execução",
                "Uma forma de declarar tipos de variáveis em tempo de compilação"
            ]
        },
        {
            "id": 5,
            "question": "Qual é o propósito da palavra-chave 'interface' em TypeScript?",
            "options": [
                "Definir contratos para a estrutura de objetos",
                "Criar instâncias de objetos",
                "Controlar fluxos condicionais no código"
            ]
        },
        {
            "id": 6,
            "question": "O que é o TypeScript declaration file (.d.ts)?",
            "options": [
                "Um arquivo que fornece informações sobre a forma como o TypeScript deve compilar o código",
                "Um arquivo usado apenas para importar módulos externos",
                "Um arquivo destinado a armazenar dados de configuração do projeto"
            ]
        },
        {
            "id": 7,
            "question": "Como você especifica tipos de parâmetros de uma função em TypeScript?",
            "options": [
                "(parametro: Tipo) => void",
                "funcao(parametro: Tipo) => void",
                "(Tipo) => void funcao"
            ]
        },
        {
            "id": 8,
            "question": "O que é o TypeScript tsconfig.json?",
            "options": [
                "Um arquivo de configuração do TypeScript que define as opções do compilador",
                "Um arquivo que armazena dados de configuração para servidores Node.js",
                "Uma biblioteca JavaScript para manipular arquivos JSON"
            ]
        },
        {
            "id": 9,
            "question": "Qual é a principal diferença entre 'let' e 'const' em TypeScript?",
            "options": [
                "'let' permite reatribuição, enquanto 'const' não",
                "'const' é usado apenas para números, enquanto 'let' é para strings",
                "Ambos são sinônimos e podem ser usados de forma intercambiável"
            ]
        },
        {
            "id": 10,
            "question": "O que são decorators em TypeScript?",
            "options": [
                "Recursos que permitem adicionar metadados às classes e membros",
                "Funções que retornam objetos constantes",
                "Palavras-chave para controlar o escopo de variáveis"
            ]
        },
        {
            "id": 11,
            "question": "Como você define uma classe em TypeScript?",
            "options": [
                "class MinhaClasse {}",
                "type MinhaClasse {}",
                "interface MinhaClasse {}"
            ]
        },
        {
            "id": 12,
            "question": "O que são genéricos em TypeScript?",
            "options": [
                "Uma maneira de criar componentes que podem trabalhar com vários tipos de dados",
                "Uma forma de restringir o acesso a certos membros de uma classe",
                "Um tipo específico para lidar com operações matemáticas"
            ]
        },
        {
            "id": 13,
            "question": "O que é um módulo em TypeScript?",
            "options": [
                "Uma maneira de organizar código em arquivos separados",
                "Um tipo especial de classe",
                "Uma palavra-chave usada para criar namespaces"
            ]
        },
        {
            "id": 14,
            "question": "Como você lida com a execução de código assíncrono em TypeScript?",
            "options": [
                "Usando as palavras-chave 'async' e 'await'",
                "Utilizando exclusivamente callbacks",
                "Adicionando a palavra-chave 'sync' às funções"
            ]
        },
        {
            "id": 15,
            "question": "O que é 'strictNullChecks' no tsconfig.json?",
            "options": [
                "Uma opção que torna a verificação de nulos mais rigorosa",
                "Uma diretiva para desativar completamente a verificação de nulos",
                "Uma configuração para habilitar a digitação dinâmica"
            ]
        },
        {
            "id": 16,
            "question": "Como você define um tipo de união em TypeScript?",
            "options": [
                "type MeuTipo = Tipo1 | Tipo2;",
                "MeuTipo = Tipo1 & Tipo2;",
                "type MeuTipo(Tipo1, Tipo2);"
            ]
        },
        {
            "id": 17,
            "question": "O que é o 'ts-node' em TypeScript?",
            "options": [
                "Um interpretador TypeScript para Node.js",
                "Um ambiente de desenvolvimento para TypeScript",
                "Um pacote para transpilar TypeScript para JavaScript"
            ]
        },
        {
            "id": 18,
            "question": "Qual é o propósito do 'tslint' em um projeto TypeScript?",
            "options": [
                "Uma ferramenta para garantir a conformidade com padrões de codificação",
                "Um compilador TypeScript alternativo",
                "Um módulo para realizar testes de unidade em TypeScript"
            ]
        },
        {
            "id": 19,
            "question": "O que é o 'strictPropertyInitialization' em TypeScript?",
            "options": [
                "Uma opção que exige que todas as propriedades das classes sejam inicializadas",
                "Uma diretiva para desativar a inicialização de propriedades em classes",
                "Uma configuração para habilitar a inicialização automática de propriedades"
            ]
        },
        {
            "id": 20,
            "question": "Como você realiza uma comparação de tipos segura em TypeScript?",
            "options": [
                "Usando '===' para garantir comparações estritas",
                "Utilizando '==' para permitir coerção de tipos",
                "Não é possível realizar comparações de tipos em TypeScript"
            ]
        },
        {
            "id": 21,
            "question": "O que é o 'namespace' em TypeScript?",
            "options": [
                "Uma forma de encapsular lógica em um escopo global",
                "Uma palavra-chave reservada para definir variáveis globais",
                "Um tipo especial de variável utilizada para armazenar informações de configuração"
            ]
        },
        {
            "id": 22,
            "question": "Como você define um tipo de função em TypeScript?",
            "options": [
                "type MinhaFuncao = (param1: Tipo1, param2: Tipo2) => TipoRetorno;",
                "function MinhaFuncao(param1: Tipo1, param2: Tipo2): TipoRetorno {};",
                "interface MinhaFuncao = (param1: Tipo1, param2: Tipo2) => TipoRetorno;"
            ]
        },
        {
            "id": 23,
            "question": "O que é o 'Duck Typing' em TypeScript?",
            "options": [
                "Um princípio que se concentra na forma dos objetos, em vez de sua origem ou tipo",
                "Uma técnica de caça a patos no desenvolvimento de software",
                "Uma configuração no tsconfig.json para ativar a tipagem dinâmica"
            ]
        },
        {
            "id": 24,
            "question": "Qual é a principal diferença entre 'interface' e 'type' em TypeScript?",
            "options": [
                "'interface' é utilizada para declarar contratos enquanto 'type' é usado para criar tipos de união",
                "Não há diferença significativa entre ambas, são sinônimos",
                "'type' é usado apenas para declarar tipos primitivos, enquanto 'interface' é para objetos"
            ]
        },
        {
            "id": 25,
            "question": "O que são 'Type Guards' em TypeScript?",
            "options": [
                "Verificações que garantem o tipo de uma variável em tempo de execução",
                "Guardas de segurança para proteger contra ataques cibernéticos",
                "Funções que garantem a segurança de código em tempo de compilação"
            ]
        },
        {
            "id": 26,
            "question": "Como você importa um módulo externo em TypeScript?",
            "options": [
                "import { Nome } from 'modulo';",
                "require('modulo')",
                "include('modulo')"
            ]
        },
        {
            "id": 27,
            "question": "O que é um tipo de 'tuple' em TypeScript?",
            "options": [
                "Uma sequência ordenada de elementos, onde cada elemento tem um tipo específico",
                "Um tipo reservado para armazenar dados numéricos",
                "Um tipo especial de array"
            ]
        },
        {
            "id": 28,
            "question": "Como você define um tipo de literal em TypeScript?",
            "options": [
                "type MeuLiteral = 'valor';",
                "const MeuLiteral = 'valor';",
                "literal MeuLiteral 'valor';"
            ]
        },
        {
            "id": 29,
            "question": "O que é um 'ambient module' em TypeScript?",
            "options": [
                "Uma declaração que representa um módulo externo sem fornecer uma implementação",
                "Um tipo de módulo que pode ser acessado em qualquer lugar do código",
                "Um módulo que precisa ser importado explicitamente em cada arquivo"
            ]
        },
        {
            "id": 30,
            "question": "Qual é o operador de propagação ('spread') em TypeScript?",
            "options": [
                "...",
                "++",
                "<<"
            ]
        },
        {
            "id": 31,
            "question": "O que é o 'non-null assertion operator' em TypeScript?",
            "options": [
                "Um operador para afirmar que uma expressão não é nula ou indefinida",
                "Um operador para tornar variáveis nulas",
                "Um operador que permite a comparação de nulos em tempo de execução"
            ]
        },
        {
            "id": 32,
            "question": "O que é 'strictBindCallApply' em TypeScript?",
            "options": [
                "Uma opção que torna a checagem de chamadas e aplicações de função mais rigorosa",
                "Uma diretiva para desativar completamente chamadas e aplicações de função",
                "Uma configuração para habilitar chamadas e aplicações de função dinâmicas"
            ]
        },
        {
            "id": 33,
            "question": "Como você define um tipo de enumeração em TypeScript?",
            "options": [
                "enum MinhaEnum { Valor1, Valor2 };",
                "type MinhaEnum = { Valor1, Valor2 };",
                "const MinhaEnum = { Valor1: 1, Valor2: 2 };"
            ]
        },
        {
            "id": 34,
            "question": "O que é o 'readonly' em TypeScript?",
            "options": [
                "Uma modificação que torna propriedades somente leitura",
                "Uma diretiva para desativar a leitura de propriedades",
                "Um operador para criar objetos imutáveis"
            ]
        },
        {
            "id": 35,
            "question": "Qual é o propósito do 'unknown' em TypeScript?",
            "options": [
                "Um tipo que representa um valor desconhecido",
                "Um tipo reservado para valores booleanos",
                "Uma palavra-chave para declarar variáveis indefinidas"
            ]
        },
        {
            "id": 36,
            "question": "O que é 'strictFunctionTypes' em TypeScript?",
            "options": [
                "Uma opção que torna a compatibilidade de tipos de função mais rigorosa",
                "Uma diretiva para desativar completamente a compatibilidade de tipos de função",
                "Uma configuração para habilitar a tipagem dinâmica em funções"
            ]
        },
        {
            "id": 37,
            "question": "Como você realiza uma importação padrão em TypeScript?",
            "options": [
                "import Nome from 'modulo';",
                "require('modulo')",
                "import { Nome } = 'modulo';"
            ]
        },
        {
            "id": 38,
            "question": "O que é o 'never' em TypeScript?",
            "options": [
                "Um tipo que representa valores que nunca ocorrem",
                "Um operador para evitar loops infinitos",
                "Um tipo reservado para funções que nunca retornam"
            ]
        },
        {
            "id": 39,
            "question": "Como você define um tipo de função assíncrona em TypeScript?",
            "options": [
                "type MinhaFuncao = async () => void;",
                "function async MinhaFuncao() {};",
                "type MinhaFuncao = () => Promise<void>;"
            ]
        },
        {
            "id": 40,
            "question": "O que é o 'esModuleInterop' em TypeScript?",
            "options": [
                "Uma opção para simplificar a interoperabilidade com módulos CommonJS",
                "Uma configuração para desativar a interoperabilidade de módulos",
                "Um operador para garantir a interoperabilidade entre módulos ES e CommonJS"
            ]
        }
    ],
    "sql": [
        {
            "id": 1,
            "question": "Qual é a função do comando SELECT em SQL?",
            "options": [
                "Selecionar dados de uma tabela (Correto)",
                "Inserir dados em uma tabela",
                "Atualizar dados em uma tabela"
            ]
        },
        {
            "id": 2,
            "question": "O que faz a cláusula WHERE em uma consulta SQL?",
            "options": [
                "Filtra os registros baseados em uma condição (Correto)",
                "Ordena os registros em ordem alfabética",
                "Agrupa os registros com base em uma coluna específica"
            ]
        },
        {
            "id": 3,
            "question": "Como podemos renomear uma coluna em uma consulta SELECT?",
            "options": [
                "Utilizando a palavra-chave RENAME",
                "Usando a cláusula AS (Correto)",
                "Alterando diretamente o nome da coluna"
            ]
        },
        {
            "id": 4,
            "question": "Qual é o propósito do comando JOIN em SQL?",
            "options": [
                "Agrupar dados em uma tabela",
                "Combinar dados de duas ou mais tabelas (Correto)",
                "Excluir registros de uma tabela"
            ]
        },
        {
            "id": 5,
            "question": "O que é um índice em um banco de dados?",
            "options": [
                "Um valor único em uma coluna",
                "Uma tabela temporária",
                "Uma estrutura que melhora a velocidade de consulta (Correto)"
            ]
        },
        {
            "id": 6,
            "question": "Como podemos ordenar os resultados de uma consulta em ordem decrescente?",
            "options": [
                "Utilizando ORDER BY DESC (Correto)",
                "Utilizando ORDER BY ASC",
                "Não é possível ordenar em ordem decrescente"
            ]
        },
        {
            "id": 7,
            "question": "Qual é a diferença entre INNER JOIN e LEFT JOIN?",
            "options": [
                "INNER JOIN retorna apenas os registros que têm correspondência em ambas as tabelas (Correto)",
                "LEFT JOIN retorna todos os registros da tabela à esquerda e os correspondentes da tabela à direita",
                "Não há diferença entre INNER JOIN e LEFT JOIN"
            ]
        },
        {
            "id": 8,
            "question": "Como podemos calcular a média de uma coluna em SQL?",
            "options": [
                "Usando a função AVG() (Correto)",
                "Utilizando a função SUM()",
                "A média não pode ser calculada em SQL"
            ]
        },
        {
            "id": 9,
            "question": "O que faz a cláusula GROUP BY em SQL?",
            "options": [
                "Agrupa os registros com base em uma condição (Correto)",
                "Filtra os registros com base em uma condição",
                "Ordena os registros em ordem alfabética"
            ]
        },
        {
            "id": 10,
            "question": "Qual é a finalidade da cláusula HAVING em uma consulta SQL?",
            "options": [
                "Filtra os registros antes da execução da função de agregação",
                "Filtra os registros após a execução da função de agregação (Correto)",
                "Não há cláusula HAVING em SQL"
            ]
        },
        {
            "id": 11,
            "question": "Como podemos excluir todos os registros de uma tabela em SQL?",
            "options": [
                "DELETE FROM tabela WHERE 1=1 (Correto)",
                "DELETE tabela",
                "DELETE * FROM tabela"
            ]
        },
        {
            "id": 12,
            "question": "O que é a normalização em um banco de dados?",
            "options": [
                "Uma técnica para organizar dados em um único campo",
                "Um processo para reduzir a redundância e melhorar a integridade dos dados (Correto)",
                "Uma forma de excluir registros duplicados"
            ]
        },
        {
            "id": 13,
            "question": "Qual é a função da cláusula UNION em SQL?",
            "options": [
                "Combinar resultados de duas consultas (Correto)",
                "Realizar a interseção de resultados de duas consultas",
                "Agrupar resultados de duas consultas"
            ]
        },
        {
            "id": 14,
            "question": "O que é uma transação em SQL?",
            "options": [
                "Um conjunto de operações atomicamente executadas (Correto)",
                "Uma operação que não pode ser desfeita",
                "Uma consulta complexa"
            ]
        },
        {
            "id": 15,
            "question": "Como podemos adicionar uma nova coluna a uma tabela existente?",
            "options": [
                "ALTER TABLE tabela ADD COLUMN nova_coluna (Correto)",
                "CREATE COLUMN nova_coluna IN tabela",
                "ADD COLUMN nova_coluna TO tabela"
            ]
        },
        {
            "id": 16,
            "question": "Qual é a diferença entre PRIMARY KEY e FOREIGN KEY?",
            "options": [
                "PRIMARY KEY identifica uma coluna única em uma tabela, enquanto FOREIGN KEY estabelece uma relação com outra tabela (Correto)",
                "PRIMARY KEY e FOREIGN KEY são termos intercambiáveis",
                "PRIMARY KEY é usada para indexar todas as colunas em uma tabela"
            ]
        },
        {
            "id": 17,
            "question": "Como podemos contar o número de registros em uma tabela?",
            "options": [
                "SELECT COUNT(*) FROM tabela (Correto)",
                "SELECT TOTAL(*) FROM tabela",
                "SELECT NUM_ROWS FROM tabela"
            ]
        },
        {
            "id": 18,
            "question": "O que é uma subconsulta em SQL?",
            "options": [
                "Uma consulta aninhada dentro de outra consulta (Correto)",
                "Uma consulta que retorna várias colunas",
                "Uma consulta que utiliza a cláusula HAVING"
            ]
        },
        {
            "id": 19,
            "question": "Qual é a função da cláusula DISTINCT em SQL?",
            "options": [
                "Selecionar apenas os registros distintos em uma tabela (Correto)",
                "Filtrar registros nulos em uma tabela",
                "Agrupar registros com base em uma condição"
            ]
        },
        {
            "id": 20,
            "question": "Como podemos atualizar dados em uma tabela em SQL?",
            "options": [
                "UPDATE tabela SET coluna = valor WHERE condição (Correto)",
                "MODIFY tabela SET coluna = valor WHERE condição",
                "ALTER tabela SET coluna = valor WHERE condição"
            ]
        },
        {
            "id": 21,
            "question": "O que é uma visão (VIEW) em SQL?",
            "options": [
                "Uma representação virtual de dados baseada em uma consulta (Correto)",
                "Uma tabela temporária",
                "Uma consulta armazenada"
            ]
        },
        {
            "id": 22,
            "question": "Como podemos realizar a ordenação em SQL por múltiplas colunas?",
            "options": [
                "Utilizando ORDER BY com vírgulas entre as colunas (Correto)",
                "ORDER BY não suporta ordenação por múltiplas colunas",
                "Utilizando GROUP BY em vez de ORDER BY"
            ]
        },
        {
            "id": 23,
            "question": "O que é uma stored procedure em SQL?",
            "options": [
                "Um conjunto de instruções SQL que são executadas automaticamente quando um evento ocorre (Correto)",
                "Uma consulta que retorna resultados específicos",
                "Uma forma de armazenar dados temporários"
            ]
        },
        {
            "id": 24,
            "question": "Qual é a função da cláusula IN em SQL?",
            "options": [
                "Compara uma expressão com os valores de uma lista ou subconsulta (Correto)",
                "Filtra registros com base em uma condição específica",
                "Agrupa registros com base em uma condição"
            ]
        },
        {
            "id": 25,
            "question": "Como podemos evitar a injeção de SQL em consultas dinâmicas?",
            "options": [
                "Utilizando parâmetros ou consultas preparadas (Correto)",
                "Utilizando apenas consultas estáticas",
                "Não é possível evitar a injeção de SQL"
            ]
        },
        {
            "id": 26,
            "question": "O que é um índice composto em SQL?",
            "options": [
                "Um índice que inclui todas as colunas da tabela",
                "Um índice que é composto por várias colunas (Correto)",
                "Um índice que é automaticamente criado para chaves primárias"
            ]
        },
        {
            "id": 27,
            "question": "Qual é a diferença entre CHAR e VARCHAR?",
            "options": [
                "CHAR armazena strings de comprimento fixo, enquanto VARCHAR armazena strings de comprimento variável (Correto)",
                "CHAR e VARCHAR são intercambiáveis",
                "CHAR armazena strings de comprimento variável, enquanto VARCHAR armazena strings de comprimento fixo"
            ]
        },
        {
            "id": 28,
            "question": "O que é uma transação ACID em SQL?",
            "options": [
                "Uma transação que é atomicamente, consistentemente, isoladamente e duravelmente executada (Correto)",
                "Uma transação que envolve todas as operações disponíveis em SQL",
                "Uma transação que é automaticamente confirmada"
            ]
        },
        {
            "id": 29,
            "question": "Como podemos adicionar restrições de integridade a uma tabela em SQL?",
            "options": [
                "Utilizando a cláusula CONSTRAINT (Correto)",
                "Utilizando a cláusula CHECK",
                "Restrições de integridade não podem ser adicionadas a tabelas"
            ]
        },
        {
            "id": 30,
            "question": "Qual é a função da cláusula GROUP BY em SQL?",
            "options": [
                "Agrupa os registros com base em uma condição (Correto)",
                "Filtra os registros com base em uma condição",
                "Ordena os registros em ordem alfabética"
            ]
        },
        {
            "id": 31,
            "question": "Como podemos calcular a soma total de uma coluna em SQL?",
            "options": [
                "Utilizando a função SUM() (Correto)",
                "Utilizando a função ADD()",
                "Utilizando a função TOTAL()"
            ]
        },
        {
            "id": 32,
            "question": "O que é uma subconsulta em SQL?",
            "options": [
                "Uma consulta aninhada dentro de outra consulta (Correto)",
                "Uma consulta que retorna várias colunas",
                "Uma consulta que utiliza a cláusula HAVING"
            ]
        },
        {
            "id": 33,
            "question": "Como podemos recuperar os primeiros N registros de uma tabela em SQL?",
            "options": [
                "Utilizando FETCH FIRST N ROWS ONLY",
                "Utilizando TOP N",
                "Utilizando LIMIT N (Correto)"
            ]
        },
        {
            "id": 34,
            "question": "O que é uma chave estrangeira (FOREIGN KEY)?",
            "options": [
                "Uma coluna que referencia a chave primária de outra tabela (Correto)",
                "Uma coluna que contém valores únicos em uma tabela",
                "Uma coluna que é automaticamente gerada pelo sistema"
            ]
        },
        {
            "id": 35,
            "question": "Como podemos calcular a mediana de uma coluna em SQL?",
            "options": [
                "A mediana não é diretamente suportada em SQL, mas pode ser calculada usando funções específicas (Correto)",
                "Utilizando a função MEDIAN()",
                "Calculando a média dos valores"
            ]
        },
        {
            "id": 36,
            "question": "O que é o operador LIKE em SQL?",
            "options": [
                "Um operador para realizar correspondência parcial em strings (Correto)",
                "Um operador para combinar valores exatos",
                "Um operador para comparar valores nulos"
            ]
        },
        {
            "id": 37,
            "question": "Como podemos realizar uma atualização condicional em SQL?",
            "options": [
                "Utilizando a cláusula WHERE na consulta UPDATE (Correto)",
                "Utilizando a cláusula SET na consulta SELECT",
                "Não é possível realizar uma atualização condicional em SQL"
            ]
        },
        {
            "id": 38,
            "question": "O que é um procedimento armazenado (stored procedure) em SQL?",
            "options": [
                "Uma coleção de instruções SQL que podem ser reutilizadas e chamadas por nome (Correto)",
                "Um conjunto de instruções SQL que retorna resultados específicos",
                "Um bloco de código que é executado automaticamente quando um evento ocorre"
            ]
        },
        {
            "id": 39,
            "question": "Qual é a diferença entre o operador UNION e UNION ALL?",
            "options": [
                "UNION retorna todos os registros, excluindo duplicatas",
                "Não há diferença entre UNION e UNION ALL",
                "UNION ALL retorna todos os registros, incluindo duplicatas (Correto)"
            ]
        },
        {
            "id": 40,
            "question": "Como podemos calcular a mediana de uma coluna em SQL?",
            "options": [
                "A mediana não é diretamente suportada em SQL, mas pode ser calculada usando funções específicas (Correto)",
                "Utilizando a função MEDIAN()",
                "Calculando a média dos valores"
            ]
        }
    ]
}